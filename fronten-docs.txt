This file is a merged representation of the entire codebase, combined into a single document.
Generated by Repomix on: 2025-02-16T12:56:26.115Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded

Additional Info:
----------------

================================================================
Directory Structure
================================================================
.editorconfig
.gitignore
angular.json
package.json
README.md
server.ts
src/app/app.component.html
src/app/app.component.ts
src/app/app.config.server.ts
src/app/app.config.ts
src/app/app.routes.ts
src/app/components/dashboard/layout/dashboard-layout.component.ts
src/app/components/dashboard/subscriptions/subscription-management.component.html
src/app/components/dashboard/subscriptions/subscription-management.component.ts
src/app/components/dashboard/users/user-management.component.ts
src/app/components/home/features/features.component.html
src/app/components/home/features/features.component.sass
src/app/components/home/features/features.component.spec.ts
src/app/components/home/features/features.component.ts
src/app/components/home/footer/footer.component.html
src/app/components/home/footer/footer.component.spec.ts
src/app/components/home/footer/footer.component.ts
src/app/components/home/hero/hero.component.html
src/app/components/home/hero/hero.component.spec.ts
src/app/components/home/hero/hero.component.ts
src/app/components/home/navbar/navbar.component.html
src/app/components/home/navbar/navbar.component.sass
src/app/components/home/navbar/navbar.component.spec.ts
src/app/components/home/navbar/navbar.component.ts
src/app/components/home/pricing/pricing.component.html
src/app/components/home/pricing/pricing.component.sass
src/app/components/home/pricing/pricing.component.spec.ts
src/app/components/home/pricing/pricing.component.ts
src/app/core/core.module.ts
src/app/core/guards/auth.guard.ts
src/app/core/interceptors/auth.interceptor.ts
src/app/core/models/auth.models.ts
src/app/core/services/auth.service.ts
src/app/features/auth/auth-routing.module.ts
src/app/features/auth/auth.module.ts
src/app/features/auth/components/forgot-password/forgot-password.component.html
src/app/features/auth/components/forgot-password/forgot-password.component.ts
src/app/features/auth/components/login/login.component.html
src/app/features/auth/components/login/login.component.ts
src/app/features/auth/components/register/register.component.html
src/app/features/auth/components/register/register.component.ts
src/app/features/auth/components/reset-password/reset-password.component.html
src/app/features/auth/components/reset-password/reset-password.component.ts
src/app/features/auth/components/verify-email/verify-email.component.html
src/app/features/auth/components/verify-email/verify-email.component.ts
src/app/models/company.ts
src/app/pages/dashboard/dashboard.component.html
src/app/pages/dashboard/dashboard.component.spec.ts
src/app/pages/dashboard/dashboard.component.ts
src/app/pages/home/home.component.html
src/app/pages/home/home.component.spec.ts
src/app/pages/home/home.component.ts
src/app/pages/login/login.component.html
src/app/pages/login/login.component.spec.ts
src/app/pages/login/login.component.ts
src/assets/logos/coca-cola.svg
src/assets/logos/disney.svg
src/assets/logos/nasa.svg
src/assets/logos/nike.svg
src/assets/logos/stripe.svg
src/environments/environment.prod.ts
src/environments/environment.ts
src/index.html
src/main.server.ts
src/main.ts
src/styles.sass
tailwind.config.js
tsconfig.app.json
tsconfig.json
tsconfig.spec.json

================================================================
Files
================================================================

================
File: .editorconfig
================
# Editor configuration, see https://editorconfig.org
root = true

[*]
charset = utf-8
indent_style = space
indent_size = 2
insert_final_newline = true
trim_trailing_whitespace = true

[*.ts]
quote_type = single

[*.md]
max_line_length = off
trim_trailing_whitespace = false

================
File: .gitignore
================
# See http://help.github.com/ignore-files/ for more about ignoring files.

# Compiled output
/dist
/tmp
/out-tsc
/bazel-out

# Node
/node_modules
npm-debug.log
yarn-error.log

# IDEs and editors
.idea/
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace

# Visual Studio Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
.history/*

# Miscellaneous
/.angular/cache
.sass-cache/
/connect.lock
/coverage
/libpeerconnection.log
testem.log
/typings

# System files
.DS_Store
Thumbs.db

================
File: angular.json
================
{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "angular-saas-starter": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "sass"
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:application",
          "options": {
            "outputPath": "dist/angular-saas-starter",
            "index": "src/index.html",
            "browser": "src/main.ts",
            "polyfills": ["zone.js"],
            "tsConfig": "tsconfig.app.json",
            "inlineStyleLanguage": "sass",
            "assets": ["src/favicon.ico", "src/assets"],
            "styles": ["src/styles.sass"],
            "scripts": [],
            "server": "src/main.server.ts",
            "prerender": true,
            "ssr": {
              "entry": "server.ts"
            }
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "buildTarget": "angular-saas-starter:build:production"
            },
            "development": {
              "buildTarget": "angular-saas-starter:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "buildTarget": "angular-saas-starter:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": ["zone.js", "zone.js/testing"],
            "tsConfig": "tsconfig.spec.json",
            "inlineStyleLanguage": "sass",
            "assets": ["src/favicon.ico", "src/assets"],
            "styles": ["src/styles.sass"],
            "scripts": []
          }
        }
      }
    }
  },
  "cli": {
    "analytics": "4d2f95cd-5337-4ccf-885d-6adcaa77aec8"
  }
}

================
File: package.json
================
{
  "name": "angular-saas-starter",
  "version": "0.0.0",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "build": "ng build",
    "watch": "ng build --watch --configuration development",
    "test": "ng test",
    "serve:ssr:angular-saas-starter": "node dist/angular-saas-starter/server/server.mjs"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^17.0.0",
    "@angular/common": "^17.0.0",
    "@angular/compiler": "^17.0.0",
    "@angular/core": "^17.0.0",
    "@angular/forms": "^17.0.0",
    "@angular/platform-browser": "^17.0.0",
    "@angular/platform-browser-dynamic": "^17.0.0",
    "@angular/platform-server": "^17.0.0",
    "@angular/router": "^17.0.0",
    "@angular/ssr": "^17.0.9",
    "@fortawesome/fontawesome-free": "^6.5.1",
    "@ngrx/store": "^17.1.0",
    "@stripe/stripe-js": "^5.6.0",
    "express": "^4.18.2",
    "rxjs": "~7.8.0",
    "tslib": "^2.3.0",
    "zone.js": "~0.14.2"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^17.0.9",
    "@angular/cli": "^17.0.9",
    "@angular/compiler-cli": "^17.0.0",
    "@tailwindcss/aspect-ratio": "^0.4.2",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/typography": "^0.5.16",
    "@types/express": "^4.17.17",
    "@types/jasmine": "~5.1.0",
    "@types/node": "^18.18.0",
    "autoprefixer": "^10.4.16",
    "jasmine-core": "~5.1.0",
    "karma": "~6.4.0",
    "karma-chrome-launcher": "~3.2.0",
    "karma-coverage": "~2.2.0",
    "karma-jasmine": "~5.1.0",
    "karma-jasmine-html-reporter": "~2.1.0",
    "postcss": "^8.4.33",
    "tailwindcss": "^3.4.1",
    "typescript": "~5.2.2"
  }
}

================
File: README.md
================
# AngularSaasStarter

This project was generated with [Angular CLI](https://github.com/angular/angular-cli) version 17.0.9.

## Development server

Run `ng serve` for a dev server. Navigate to `http://localhost:4200/`. The application will automatically reload if you change any of the source files.

## Code scaffolding

Run `ng generate component component-name` to generate a new component. You can also use `ng generate directive|pipe|service|class|guard|interface|enum|module`.

## Build

Run `ng build` to build the project. The build artifacts will be stored in the `dist/` directory.

## Running unit tests

Run `ng test` to execute the unit tests via [Karma](https://karma-runner.github.io).

## Running end-to-end tests

Run `ng e2e` to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.

## Further help

To get more help on the Angular CLI use `ng help` or go check out the [Angular CLI Overview and Command Reference](https://angular.io/cli) page.

================
File: server.ts
================
import { APP_BASE_HREF } from '@angular/common';
import { CommonEngine } from '@angular/ssr';
import express from 'express';
import { fileURLToPath } from 'node:url';
import { dirname, join, resolve } from 'node:path';
import bootstrap from './src/main.server';

// The Express app is exported so that it can be used by serverless Functions.
export function app(): express.Express {
  const server = express();
  const serverDistFolder = dirname(fileURLToPath(import.meta.url));
  const browserDistFolder = resolve(serverDistFolder, '../browser');
  const indexHtml = join(serverDistFolder, 'index.server.html');

  const commonEngine = new CommonEngine();

  server.set('view engine', 'html');
  server.set('views', browserDistFolder);

  // Example Express Rest API endpoints
  // server.get('/api/**', (req, res) => { });
  // Serve static files from /browser
  server.get('*.*', express.static(browserDistFolder, {
    maxAge: '1y'
  }));

  // All regular routes use the Angular engine
  server.get('*', (req, res, next) => {
    const { protocol, originalUrl, baseUrl, headers } = req;

    commonEngine
      .render({
        bootstrap,
        documentFilePath: indexHtml,
        url: `${protocol}://${headers.host}${originalUrl}`,
        publicPath: browserDistFolder,
        providers: [{ provide: APP_BASE_HREF, useValue: baseUrl }],
      })
      .then((html) => res.send(html))
      .catch((err) => next(err));
  });

  return server;
}

function run(): void {
  const port = process.env['PORT'] || 4000;

  // Start up the Node server
  const server = app();
  server.listen(port, () => {
    console.log(`Node Express server listening on http://localhost:${port}`);
  });
}

run();

================
File: src/app/app.component.html
================
<router-outlet></router-outlet>

================
File: src/app/app.component.ts
================
import { Component } from '@angular/core';

import { RouterOutlet } from '@angular/router';

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [RouterOutlet],
  templateUrl: './app.component.html',
  styleUrl: './app.component.sass',
})
export class AppComponent {
  title = 'SPA';
}

================
File: src/app/app.config.server.ts
================
import { mergeApplicationConfig, ApplicationConfig } from '@angular/core';
import { provideServerRendering } from '@angular/platform-server';
import { appConfig } from './app.config';

const serverConfig: ApplicationConfig = {
  providers: [
    provideServerRendering()
  ]
};

export const config = mergeApplicationConfig(appConfig, serverConfig);

================
File: src/app/app.config.ts
================
import { ApplicationConfig } from '@angular/core';
import {
  InMemoryScrollingFeature,
  InMemoryScrollingOptions,
  provideRouter,
  withInMemoryScrolling,
} from '@angular/router';

import { routes } from './app.routes';
import { provideClientHydration } from '@angular/platform-browser';
import { provideStore } from '@ngrx/store';
import { provideHttpClient } from '@angular/common/http';

const scrollConfig: InMemoryScrollingOptions = {
  scrollPositionRestoration: 'top',
  anchorScrolling: 'enabled',
};

const scrollingFeature: InMemoryScrollingFeature =
  withInMemoryScrolling(scrollConfig);

export const appConfig: ApplicationConfig = {
  providers: [
    provideRouter(routes, scrollingFeature),
    provideClientHydration(),
    provideStore(),
    provideHttpClient(),
  ],
};

================
File: src/app/app.routes.ts
================
import { Routes } from '@angular/router';
import { DashboardLayoutComponent } from './components/dashboard/layout/dashboard-layout.component';
import { UserManagementComponent } from './components/dashboard/users/user-management.component';
import { SubscriptionManagementComponent } from './components/dashboard/subscriptions/subscription-management.component';

// Routes
import { HomeComponent } from './pages/home/home.component';

export const routes: Routes = [
  {
    path: '',
    loadComponent: () => import('./pages/home/home.component').then(c => c.HomeComponent)
  },
  {
    path: 'auth',
    loadChildren: () => import('./features/auth/auth.module').then(m => m.AuthModule)
  },
  {
    path: 'dashboard',
    component: DashboardLayoutComponent,
    children: [
      {
        path: '',
        redirectTo: 'users',
        pathMatch: 'full'
      },
      {
        path: 'users',
        component: UserManagementComponent
      },
      {
        path: 'subscriptions',
        component: SubscriptionManagementComponent
      }
    ]
  },
  {
    path: '**',
    redirectTo: ''
  }
];

================
File: src/app/components/dashboard/layout/dashboard-layout.component.ts
================
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterLink, RouterOutlet } from '@angular/router';

interface MenuItem {
  icon: string;
  label: string;
  route: string;
  badge?: string;
}

@Component({
  selector: 'app-dashboard-layout',
  standalone: true,
  imports: [CommonModule, RouterLink, RouterOutlet],
  template: `
    <div class="min-h-screen bg-gray-50">
      <!-- Sidebar -->
      <aside class="fixed inset-y-0 left-0 w-64 bg-white border-r border-gray-200 z-30">
        <!-- Logo -->
        <div class="h-16 flex items-center justify-between px-4 border-b border-gray-200">
          <img src="assets/logo.svg" alt="Logo" class="h-8 w-auto">
          <button class="lg:hidden p-2 rounded-lg hover:bg-gray-100"
                  (click)="toggleSidebar()">
            <i class="fas fa-times"></i>
          </button>
        </div>

        <!-- Navigation -->
        <nav class="p-4 space-y-1">
          @for (item of menuItems; track item) {
            <a [routerLink]="item.route"
               routerLinkActive="bg-primary-50 text-primary-600"
               class="flex items-center gap-3 px-3 py-2 text-sm font-medium text-gray-700 rounded-lg
                      hover:bg-gray-50 transition-colors duration-200">
              <i [class]="item.icon"></i>
              <span>{{item.label}}</span>
              @if (item.badge) {
                <span class="ml-auto text-xs bg-primary-100 text-primary-600 px-2 py-0.5 rounded-full">
                  {{item.badge}}
                </span>
              }
            </a>
          }
        </nav>
      </aside>

      <!-- Main Content -->
      <div class="lg:pl-64">
        <!-- Header -->
        <header class="h-16 bg-white border-b border-gray-200 fixed top-0 right-0 left-0 lg:left-64 z-20">
          <div class="h-full px-4 flex items-center justify-between">
            <!-- Mobile Menu Button -->
            <button class="lg:hidden p-2 rounded-lg hover:bg-gray-100"
                    (click)="toggleSidebar()">
              <i class="fas fa-bars"></i>
            </button>

            <!-- Search -->
            <div class="hidden sm:flex items-center flex-1 px-4 max-w-xl">
              <div class="relative w-full">
                <input type="text" 
                       placeholder="Search..."
                       class="w-full pl-10 pr-4 py-2 bg-gray-50 border border-gray-200 rounded-lg
                              focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent">
                <i class="fas fa-search absolute left-3 top-1/2 -translate-y-1/2 text-gray-400"></i>
              </div>
            </div>

            <!-- Right Actions -->
            <div class="flex items-center gap-4">
              <!-- Notifications -->
              <button class="p-2 rounded-lg hover:bg-gray-100 relative">
                <i class="fas fa-bell text-gray-600"></i>
                <span class="absolute top-1 right-1 w-2 h-2 bg-primary-500 rounded-full"></span>
              </button>

              <!-- Profile -->
              <div class="relative">
                <button class="flex items-center gap-2 p-2 rounded-lg hover:bg-gray-100"
                        (click)="toggleProfileMenu()">
                  <img src="assets/avatar.jpg" 
                       alt="Profile" 
                       class="w-8 h-8 rounded-full">
                  <span class="hidden sm:block text-sm font-medium text-gray-700">John Doe</span>
                  <i class="fas fa-chevron-down text-xs text-gray-400"></i>
                </button>

                <!-- Profile Menu -->
                @if (isProfileMenuOpen) {
                  <div class="absolute right-0 mt-2 w-48 bg-white rounded-xl shadow-lg border border-gray-100
                              animate-fade-in">
                    <div class="py-2">
                      <a href="#" class="flex items-center gap-3 px-4 py-2 text-sm text-gray-700 hover:bg-gray-50">
                        <i class="fas fa-user"></i>
                        Profile
                      </a>
                      <a href="#" class="flex items-center gap-3 px-4 py-2 text-sm text-gray-700 hover:bg-gray-50">
                        <i class="fas fa-cog"></i>
                        Settings
                      </a>
                      <hr class="my-1 border-gray-100">
                      <a href="#" class="flex items-center gap-3 px-4 py-2 text-sm text-red-600 hover:bg-red-50">
                        <i class="fas fa-sign-out-alt"></i>
                        Sign Out
                      </a>
                    </div>
                  </div>
                }
              </div>
            </div>
          </div>
        </header>

        <!-- Page Content -->
        <main class="pt-16 min-h-screen">
          <router-outlet />
        </main>
      </div>
    </div>
  `,
})
export class DashboardLayoutComponent {
  isProfileMenuOpen = false;
  isSidebarOpen = false;

  menuItems: MenuItem[] = [
    {
      icon: 'fas fa-home',
      label: 'Dashboard',
      route: '/dashboard'
    },
    {
      icon: 'fas fa-users',
      label: 'User Management',
      route: '/dashboard/users',
      badge: 'New'
    },
    {
      icon: 'fas fa-credit-card',
      label: 'Subscriptions',
      route: '/dashboard/subscriptions'
    },
    {
      icon: 'fas fa-chart-bar',
      label: 'Analytics',
      route: '/dashboard/analytics'
    },
    {
      icon: 'fas fa-cog',
      label: 'Settings',
      route: '/dashboard/settings'
    }
  ];

  toggleProfileMenu() {
    this.isProfileMenuOpen = !this.isProfileMenuOpen;
  }

  toggleSidebar() {
    this.isSidebarOpen = !this.isSidebarOpen;
  }
}

================
File: src/app/components/dashboard/subscriptions/subscription-management.component.html
================
<div class="p-6">
  <!-- Header -->
  <div class="mb-8">
    <h1 class="text-2xl font-bold text-gray-900 mb-2">Subscription Management</h1>
    <p class="text-gray-600">Manage your subscription plans and billing details.</p>
  </div>

  <!-- Current Plan -->
  <div class="bg-white rounded-xl shadow-sm p-6 mb-8">
    <div class="flex items-center justify-between mb-6">
      <div>
        <h2 class="text-lg font-semibold text-gray-900">Current Plan</h2>
        <p class="text-sm text-gray-500">Your subscription plan and usage</p>
      </div>
      <button class="px-4 py-2 bg-primary-500 text-white rounded-xl
                   hover:bg-primary-600 transition-colors duration-200
                   focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2">
        Upgrade Plan
      </button>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
      <div class="bg-gray-50 rounded-lg p-4">
        <div class="text-sm font-medium text-gray-500 mb-1">Plan</div>
        <div class="text-lg font-semibold text-gray-900">Pro Plan</div>
      </div>
      <div class="bg-gray-50 rounded-lg p-4">
        <div class="text-sm font-medium text-gray-500 mb-1">Billing Cycle</div>
        <div class="text-lg font-semibold text-gray-900">Monthly</div>
      </div>
      <div class="bg-gray-50 rounded-lg p-4">
        <div class="text-sm font-medium text-gray-500 mb-1">Next Billing</div>
        <div class="text-lg font-semibold text-gray-900">March 1, 2024</div>
      </div>
      <div class="bg-gray-50 rounded-lg p-4">
        <div class="text-sm font-medium text-gray-500 mb-1">Amount</div>
        <div class="text-lg font-semibold text-gray-900">$49.00</div>
      </div>
    </div>
  </div>

  <!-- Usage Stats -->
  <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
    <div class="bg-white rounded-xl shadow-sm p-6">
      <div class="flex items-center justify-between mb-4">
        <h3 class="text-sm font-medium text-gray-500">Storage Used</h3>
        <span class="text-xs font-medium text-primary-600 bg-primary-50 px-2 py-1 rounded-full">
          80% of 10GB
        </span>
      </div>
      <div class="relative pt-1">
        <div class="overflow-hidden h-2 text-xs flex rounded bg-gray-100">
          <div class="w-4/5 bg-primary-500 rounded"></div>
        </div>
      </div>
    </div>

    <div class="bg-white rounded-xl shadow-sm p-6">
      <div class="flex items-center justify-between mb-4">
        <h3 class="text-sm font-medium text-gray-500">API Calls</h3>
        <span class="text-xs font-medium text-green-600 bg-green-50 px-2 py-1 rounded-full">
          40% of 100K
        </span>
      </div>
      <div class="relative pt-1">
        <div class="overflow-hidden h-2 text-xs flex rounded bg-gray-100">
          <div class="w-2/5 bg-green-500 rounded"></div>
        </div>
      </div>
    </div>

    <div class="bg-white rounded-xl shadow-sm p-6">
      <div class="flex items-center justify-between mb-4">
        <h3 class="text-sm font-medium text-gray-500">Team Members</h3>
        <span class="text-xs font-medium text-yellow-600 bg-yellow-50 px-2 py-1 rounded-full">
          15 of 20 seats
        </span>
      </div>
      <div class="relative pt-1">
        <div class="overflow-hidden h-2 text-xs flex rounded bg-gray-100">
          <div class="w-3/4 bg-yellow-500 rounded"></div>
        </div>
      </div>
    </div>
  </div>

  <!-- Billing History -->
  <div class="bg-white rounded-xl shadow-sm overflow-hidden">
    <div class="px-6 py-4 border-b border-gray-200">
      <h2 class="text-lg font-semibold text-gray-900">Billing History</h2>
    </div>
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead>
          <tr class="bg-gray-50">
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
            <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Invoice</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          @for (subscription of subscriptions; track subscription.id) {
            <tr class="hover:bg-gray-50 transition-colors duration-200">
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                {{subscription.startDate}}
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm text-gray-900">{{subscription.plan}}</div>
                <div class="text-sm text-gray-500">{{subscription.interval}} plan</div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                ${{subscription.amount.toFixed(2)}}
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full"
                      [class]="getStatusBadgeClass(subscription.status)">
                  {{subscription.status}}
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                <button class="text-primary-600 hover:text-primary-900">
                  <i class="fas fa-download mr-1"></i>
                  PDF
                </button>
              </td>
            </tr>
          }
        </tbody>
      </table>
    </div>
  </div>

  <!-- Payment Method -->
  <div class="mt-8 bg-white rounded-xl shadow-sm p-6">
    <div class="flex items-center justify-between mb-6">
      <div>
        <h2 class="text-lg font-semibold text-gray-900">Payment Method</h2>
        <p class="text-sm text-gray-500">Manage your payment details</p>
      </div>
      <button class="px-4 py-2 text-primary-600 border border-primary-600 rounded-xl
                   hover:bg-primary-50 transition-colors duration-200
                   focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2">
        <i class="fas fa-plus mr-2"></i>
        Add Payment Method
      </button>
    </div>

    <div class="flex items-center p-4 bg-gray-50 rounded-lg">
      <div class="flex-shrink-0">
        <i class="fab fa-cc-visa text-2xl text-gray-400"></i>
      </div>
      <div class="ml-4 flex-1">
        <div class="text-sm font-medium text-gray-900">Visa ending in 4242</div>
        <div class="text-sm text-gray-500">Expires 12/2024</div>
      </div>
      <div>
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
          Default
        </span>
      </div>
    </div>
  </div>
</div>

================
File: src/app/components/dashboard/subscriptions/subscription-management.component.ts
================
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';

interface Subscription {
  id: string;
  plan: string;
  status: 'active' | 'cancelled' | 'past_due';
  startDate: string;
  nextBilling: string;
  amount: number;
  interval: 'monthly' | 'yearly';
}

@Component({
  selector: 'app-subscription-management',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './subscription-management.component.html'
})
export class SubscriptionManagementComponent {
  subscriptions: Subscription[] = [
    {
      id: '1',
      plan: 'Pro Plan',
      status: 'active',
      startDate: 'Feb 1, 2024',
      nextBilling: 'Mar 1, 2024',
      amount: 49.00,
      interval: 'monthly'
    },
    {
      id: '2',
      plan: 'Pro Plan',
      status: 'active',
      startDate: 'Jan 1, 2024',
      nextBilling: 'Feb 1, 2024',
      amount: 49.00,
      interval: 'monthly'
    },
    {
      id: '3',
      plan: 'Basic Plan',
      status: 'cancelled',
      startDate: 'Dec 1, 2023',
      nextBilling: 'Jan 1, 2024',
      amount: 29.00,
      interval: 'monthly'
    }
  ];

  getStatusBadgeClass(status: string): string {
    const baseClasses = 'bg-opacity-10 ';
    switch (status) {
      case 'active':
        return baseClasses + 'bg-green-500 text-green-800';
      case 'cancelled':
        return baseClasses + 'bg-red-500 text-red-800';
      case 'past_due':
        return baseClasses + 'bg-yellow-500 text-yellow-800';
      default:
        return baseClasses + 'bg-gray-500 text-gray-800';
    }
  }
}

================
File: src/app/components/dashboard/users/user-management.component.ts
================
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';

interface User {
  id: string;
  name: string;
  email: string;
  role: string;
  status: 'active' | 'inactive';
  lastLogin: string;
}

@Component({
  selector: 'app-user-management',
  standalone: true,
  imports: [CommonModule, FormsModule],
  template: `
    <div class="p-6">
      <!-- Header -->
      <div class="mb-8">
        <h1 class="text-2xl font-bold text-gray-900 mb-2">User Management</h1>
        <p class="text-gray-600">Manage your organization's users and their roles.</p>
      </div>

      <!-- Actions Bar -->
      <div class="flex flex-col sm:flex-row gap-4 mb-6">
        <!-- Search -->
        <div class="relative flex-1">
          <input type="text" 
                 placeholder="Search users..."
                 class="w-full pl-10 pr-4 py-2 bg-white border border-gray-200 rounded-xl
                        focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent">
          <i class="fas fa-search absolute left-3 top-1/2 -translate-y-1/2 text-gray-400"></i>
        </div>

        <!-- Filters -->
        <div class="flex gap-4">
          <select class="px-4 py-2 bg-white border border-gray-200 rounded-xl text-gray-700
                         focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent">
            <option value="">All Roles</option>
            <option value="admin">Admin</option>
            <option value="user">User</option>
            <option value="editor">Editor</option>
          </select>

          <select class="px-4 py-2 bg-white border border-gray-200 rounded-xl text-gray-700
                         focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent">
            <option value="">All Status</option>
            <option value="active">Active</option>
            <option value="inactive">Inactive</option>
          </select>

          <button class="px-4 py-2 bg-primary-500 text-white rounded-xl
                         hover:bg-primary-600 transition-colors duration-200
                         focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2">
            <i class="fas fa-plus mr-2"></i>
            Add User
          </button>
        </div>
      </div>

      <!-- Users Table -->
      <div class="bg-white rounded-xl shadow-sm overflow-hidden">
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead>
              <tr class="bg-gray-50">
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Login</th>
                <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              @for (user of users; track user.id) {
                <tr class="hover:bg-gray-50 transition-colors duration-200">
                  <td class="px-6 py-4 whitespace-nowrap">
                    <div class="flex items-center">
                      <div class="h-10 w-10 flex-shrink-0">
                        <img class="h-10 w-10 rounded-full" 
                             [src]="'https://ui-avatars.com/api/?name=' + user.name" 
                             [alt]="user.name">
                      </div>
                      <div class="ml-4">
                        <div class="text-sm font-medium text-gray-900">{{user.name}}</div>
                        <div class="text-sm text-gray-500">{{user.email}}</div>
                      </div>
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full"
                          [class]="getRoleBadgeClass(user.role)">
                      {{user.role}}
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full"
                          [class]="getStatusBadgeClass(user.status)">
                      {{user.status}}
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    {{user.lastLogin}}
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                    <button class="text-primary-600 hover:text-primary-900 mr-3">
                      <i class="fas fa-edit"></i>
                    </button>
                    <button class="text-red-600 hover:text-red-900">
                      <i class="fas fa-trash"></i>
                    </button>
                  </td>
                </tr>
              }
            </tbody>
          </table>
        </div>

        <!-- Pagination -->
        <div class="bg-white px-4 py-3 border-t border-gray-200 sm:px-6">
          <div class="flex items-center justify-between">
            <div class="flex-1 flex justify-between sm:hidden">
              <button class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                Previous
              </button>
              <button class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                Next
              </button>
            </div>
            <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
              <div>
                <p class="text-sm text-gray-700">
                  Showing
                  <span class="font-medium">1</span>
                  to
                  <span class="font-medium">10</span>
                  of
                  <span class="font-medium">20</span>
                  results
                </p>
              </div>
              <div>
                <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                  <button class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                    <span class="sr-only">Previous</span>
                    <i class="fas fa-chevron-left"></i>
                  </button>
                  <button class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                    1
                  </button>
                  <button class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-primary-50 text-sm font-medium text-primary-600">
                    2
                  </button>
                  <button class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                    3
                  </button>
                  <button class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                    <span class="sr-only">Next</span>
                    <i class="fas fa-chevron-right"></i>
                  </button>
                </nav>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  `
})
export class UserManagementComponent {
  users: User[] = [
    {
      id: '1',
      name: 'John Doe',
      email: 'john@example.com',
      role: 'Admin',
      status: 'active',
      lastLogin: '2 hours ago'
    },
    {
      id: '2',
      name: 'Jane Smith',
      email: 'jane@example.com',
      role: 'User',
      status: 'active',
      lastLogin: '1 day ago'
    },
    {
      id: '3',
      name: 'Bob Johnson',
      email: 'bob@example.com',
      role: 'Editor',
      status: 'inactive',
      lastLogin: '1 week ago'
    }
  ];

  getRoleBadgeClass(role: string): string {
    const baseClasses = 'bg-opacity-10 ';
    switch (role.toLowerCase()) {
      case 'admin':
        return baseClasses + 'bg-purple-500 text-purple-800';
      case 'editor':
        return baseClasses + 'bg-blue-500 text-blue-800';
      default:
        return baseClasses + 'bg-gray-500 text-gray-800';
    }
  }

  getStatusBadgeClass(status: string): string {
    const baseClasses = 'bg-opacity-10 ';
    switch (status) {
      case 'active':
        return baseClasses + 'bg-green-500 text-green-800';
      case 'inactive':
        return baseClasses + 'bg-red-500 text-red-800';
      default:
        return baseClasses + 'bg-gray-500 text-gray-800';
    }
  }
}

================
File: src/app/components/home/features/features.component.html
================
<section id="features" class="py-24 bg-gradient-to-b from-white to-gray-50">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Section Header -->
    <div class="max-w-3xl mx-auto text-center mb-16">
      <span class="inline-block text-primary-600 font-semibold mb-4 animate-slide-up">
        <span class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary-50">
          <i class="fas fa-sparkles text-primary-500"></i>
          Powerful Features
        </span>
      </span>
      
      <h2 class="text-3xl sm:text-4xl lg:text-display-2 font-bold text-gray-700 tracking-tight mb-6 animate-fade-in">
        Everything you need to
        <span class="relative inline-block">
          <span class="absolute inset-x-0 bottom-2 h-3 bg-primary-200 opacity-50"></span>
          <span class="relative">scale your SaaS</span>
        </span>
      </h2>
      <p class="text-lg text-gray-500 max-w-2xl mx-auto animate-fade-in">
        Comprehensive tools and features to help you build, launch, and grow your software business.
      </p>
    </div>

    <!-- Features Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
      <!-- Email Feature -->
      <div class="group relative bg-white rounded-2xl shadow-soft hover:shadow-hover 
                  transform hover:-translate-y-1 transition-all duration-300 animate-scale
                  overflow-hidden">
        <div class="absolute inset-0 bg-gradient-to-br from-primary-500/5 to-transparent opacity-0 
                    group-hover:opacity-100 transition-opacity duration-300"></div>
        <div class="relative p-8">
          <div class="w-14 h-14 bg-primary-50 rounded-xl flex items-center justify-center mb-6
                      group-hover:bg-primary-500 transition-colors duration-300
                      transform group-hover:rotate-6">
            <i class="fa-regular fa-envelope text-2xl text-primary-500 group-hover:text-white 
                    transition-colors duration-300"></i>
          </div>
          <h3 class="text-xl font-semibold text-gray-700 mb-4 group-hover:text-primary-600 
                     transition-colors">
            Email Integration
            <i class="fas fa-arrow-right ml-2 opacity-0 group-hover:opacity-100 
                    transform translate-x-0 group-hover:translate-x-1 transition-all"></i>
          </h3>
          <p class="text-gray-500 leading-relaxed">
            Seamlessly integrate email communications with your favorite providers and automate your workflows.
          </p>
        </div>
        <div class="absolute bottom-0 left-0 right-0 h-1 bg-primary-500 transform scale-x-0 
                    group-hover:scale-x-100 transition-transform duration-300 origin-left"></div>
      </div>

      <!-- Partnership Feature -->
      <div class="group relative bg-white rounded-2xl shadow-soft hover:shadow-hover 
                  transform hover:-translate-y-1 transition-all duration-300 animate-scale
                  overflow-hidden">
        <div class="absolute inset-0 bg-gradient-to-br from-primary-500/5 to-transparent opacity-0 
                    group-hover:opacity-100 transition-opacity duration-300"></div>
        <div class="relative p-8">
          <div class="w-14 h-14 bg-primary-50 rounded-xl flex items-center justify-center mb-6
                      group-hover:bg-primary-500 transition-colors duration-300
                      transform group-hover:rotate-6">
            <i class="fa-regular fa-handshake text-2xl text-primary-500 group-hover:text-white 
                    transition-colors duration-300"></i>
          </div>
          <h3 class="text-xl font-semibold text-gray-700 mb-4 group-hover:text-primary-600 
                     transition-colors">
            Partnership Tools
            <i class="fas fa-arrow-right ml-2 opacity-0 group-hover:opacity-100 
                    transform translate-x-0 group-hover:translate-x-1 transition-all"></i>
          </h3>
          <p class="text-gray-500 leading-relaxed">
            Build and manage partner relationships with our comprehensive collaboration tools.
          </p>
        </div>
        <div class="absolute bottom-0 left-0 right-0 h-1 bg-primary-500 transform scale-x-0 
                    group-hover:scale-x-100 transition-transform duration-300 origin-left"></div>
      </div>

      <!-- Communication Feature -->
      <div class="group relative bg-white rounded-2xl shadow-soft hover:shadow-hover 
                  transform hover:-translate-y-1 transition-all duration-300 animate-scale
                  overflow-hidden">
        <div class="absolute inset-0 bg-gradient-to-br from-primary-500/5 to-transparent opacity-0 
                    group-hover:opacity-100 transition-opacity duration-300"></div>
        <div class="relative p-8">
          <div class="w-14 h-14 bg-primary-50 rounded-xl flex items-center justify-center mb-6
                      group-hover:bg-primary-500 transition-colors duration-300
                      transform group-hover:rotate-6">
            <i class="fa-regular fa-comments text-2xl text-primary-500 group-hover:text-white 
                    transition-colors duration-300"></i>
          </div>
          <h3 class="text-xl font-semibold text-gray-700 mb-4 group-hover:text-primary-600 
                     transition-colors">
            Team Chat
            <i class="fas fa-arrow-right ml-2 opacity-0 group-hover:opacity-100 
                    transform translate-x-0 group-hover:translate-x-1 transition-all"></i>
          </h3>
          <p class="text-gray-500 leading-relaxed">
            Real-time communication tools to keep your team connected and productive.
          </p>
        </div>
        <div class="absolute bottom-0 left-0 right-0 h-1 bg-primary-500 transform scale-x-0 
                    group-hover:scale-x-100 transition-transform duration-300 origin-left"></div>
      </div>

      <!-- Documentation Feature -->
      <div class="group relative bg-white rounded-2xl shadow-soft hover:shadow-hover 
                  transform hover:-translate-y-1 transition-all duration-300 animate-scale
                  overflow-hidden">
        <div class="absolute inset-0 bg-gradient-to-br from-primary-500/5 to-transparent opacity-0 
                    group-hover:opacity-100 transition-opacity duration-300"></div>
        <div class="relative p-8">
          <div class="w-14 h-14 bg-primary-50 rounded-xl flex items-center justify-center mb-6
                      group-hover:bg-primary-500 transition-colors duration-300
                      transform group-hover:rotate-6">
            <i class="fa-regular fa-file-lines text-2xl text-primary-500 group-hover:text-white 
                    transition-colors duration-300"></i>
          </div>
          <h3 class="text-xl font-semibold text-gray-700 mb-4 group-hover:text-primary-600 
                     transition-colors">
            Documentation
            <i class="fas fa-arrow-right ml-2 opacity-0 group-hover:opacity-100 
                    transform translate-x-0 group-hover:translate-x-1 transition-all"></i>
          </h3>
          <p class="text-gray-500 leading-relaxed">
            Comprehensive documentation and guides to help you get started quickly.
          </p>
        </div>
        <div class="absolute bottom-0 left-0 right-0 h-1 bg-primary-500 transform scale-x-0 
                    group-hover:scale-x-100 transition-transform duration-300 origin-left"></div>
      </div>
    </div>

    <!-- Call to Action -->
    <div class="mt-16 text-center">
      <a href="#" 
         class="group inline-flex items-center gap-2 px-6 py-3 bg-primary-50 text-primary-600 
                rounded-full font-medium hover:bg-primary-100 transition-colors duration-300
                focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2">
        <span>Explore all features</span>
        <i class="fas fa-arrow-right transform group-hover:translate-x-1 transition-transform"></i>
      </a>
    </div>
  </div>
</section>

================
File: src/app/components/home/features/features.component.sass
================
.features-box
    display: flex
    flex-direction: column
    flex-wrap: wrap
    flex: 1

    background-color: #F7F7F8

    min-width: 200px
    padding: 16px
    border-radius: 6px
    i
        font-size: 22px
    h6
        font-weight: 600
        color: #343140
    p
        color: #636869

================
File: src/app/components/home/features/features.component.spec.ts
================
import { ComponentFixture, TestBed } from '@angular/core/testing';

import { FeaturesComponent } from './features.component';

describe('FeaturesComponent', () => {
  let component: FeaturesComponent;
  let fixture: ComponentFixture<FeaturesComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [FeaturesComponent]
    })
    .compileComponents();
    
    fixture = TestBed.createComponent(FeaturesComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

================
File: src/app/components/home/features/features.component.ts
================
import { Component } from '@angular/core';

@Component({
  selector: 'section-features',
  standalone: true,
  imports: [],
  templateUrl: './features.component.html',
  styleUrl: './features.component.sass',
})
export class FeaturesComponent {}

================
File: src/app/components/home/footer/footer.component.html
================
<footer class="bg-white border-t border-gray-200 pt-16 pb-12">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Top Section -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-16 mb-16">
      <!-- Newsletter Section -->
      <div class="max-w-md">
        <div class="flex items-center gap-3 mb-6">
          <div class="w-12 h-12 rounded-xl bg-primary-50 flex items-center justify-center">
            <i class="fas fa-paper-plane text-primary-500"></i>
          </div>
          <div>
            <h3 class="text-xl font-bold text-gray-700">Stay up to date</h3>
            <p class="text-gray-500">Get the latest updates and offers.</p>
          </div>
        </div>

        <form class="space-y-4" (ngSubmit)="subscribeNewsletter()" #newsletterForm="ngForm">
          <div class="relative">
            <input type="email" 
                   [(ngModel)]="newsletterEmail"
                   name="email"
                   required
                   email
                   placeholder="Enter your email"
                   class="w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-xl
                          focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent
                          placeholder-gray-400">
            <button type="submit"
                    [disabled]="!newsletterForm.valid"
                    class="absolute right-2 top-2 px-4 py-1.5 bg-primary-500 text-white rounded-lg
                           hover:bg-primary-600 transition-colors duration-200
                           disabled:opacity-50 disabled:cursor-not-allowed
                           focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2">
              Subscribe
            </button>
          </div>
          @if (newsletterForm.submitted && newsletterSuccess) {
            <p class="text-sm text-green-600 flex items-center gap-2">
              <i class="fas fa-check-circle"></i>
              Thanks for subscribing!
            </p>
          }
        </form>
      </div>

      <!-- Social Links -->
      <div class="lg:ml-auto">
        <h3 class="text-xl font-bold text-gray-700 mb-6">Connect with us</h3>
        <div class="grid grid-cols-2 sm:grid-cols-4 gap-4">
          @for (social of socialLinks; track social) {
            <a [href]="social.url" 
               target="_blank"
               rel="noopener noreferrer"
               class="group flex items-center gap-3 p-4 bg-gray-50 rounded-xl
                      hover:bg-primary-50 transition-colors duration-200">
              <div class="w-10 h-10 rounded-lg bg-white shadow-sm flex items-center justify-center
                          group-hover:bg-primary-500 transition-colors duration-200">
                <i [class]="social.icon + ' text-primary-500 group-hover:text-white transition-colors duration-200'"></i>
              </div>
              <div>
                <p class="font-medium text-gray-700 group-hover:text-primary-600">{{social.name}}</p>
                <p class="text-sm text-gray-500">{{social.followers}}</p>
              </div>
            </a>
          }
        </div>
      </div>
    </div>

    <!-- Main Footer Links -->
    <div class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-8 mb-16">
      <!-- Product -->
      <div class="col-span-2">
        <h4 class="text-gray-700 font-semibold mb-4">Product</h4>
        <ul class="space-y-3">
          @for (link of productLinks; track link) {
            <li>
              <a [href]="link.url" 
                 class="text-gray-500 hover:text-primary-500 transition-colors duration-200
                        flex items-center gap-2">
                <i [class]="link.icon + ' text-sm'"></i>
                {{link.name}}
              </a>
            </li>
          }
        </ul>
      </div>

      <!-- Company -->
      <div class="col-span-2">
        <h4 class="text-gray-700 font-semibold mb-4">Company</h4>
        <ul class="space-y-3">
          @for (link of companyLinks; track link) {
            <li>
              <a [href]="link.url" 
                 class="text-gray-500 hover:text-primary-500 transition-colors duration-200
                        flex items-center gap-2">
                <i [class]="link.icon + ' text-sm'"></i>
                {{link.name}}
              </a>
            </li>
          }
        </ul>
      </div>

      <!-- Resources -->
      <div class="col-span-2">
        <h4 class="text-gray-700 font-semibold mb-4">Resources</h4>
        <ul class="space-y-3">
          @for (link of resourceLinks; track link) {
            <li>
              <a [href]="link.url" 
                 class="text-gray-500 hover:text-primary-500 transition-colors duration-200
                        flex items-center gap-2">
                <i [class]="link.icon + ' text-sm'"></i>
                {{link.name}}
              </a>
            </li>
          }
        </ul>
      </div>
    </div>

    <!-- Bottom Section -->
    <div class="border-t border-gray-200 pt-8">
      <div class="flex flex-col md:flex-row justify-between items-center gap-4">
        <!-- Logo and Copyright -->
        <div class="flex items-center gap-2">
          <img src="assets/logo.svg" alt="Logo" class="h-8 w-auto">
          <span class="text-gray-500">&copy; {{currentYear}} Your Company. All rights reserved.</span>
        </div>

        <!-- Legal Links -->
        <div class="flex flex-wrap justify-center gap-6">
          @for (link of legalLinks; track link) {
            <a [href]="link.url" 
               class="text-sm text-gray-500 hover:text-primary-500 transition-colors duration-200">
              {{link.name}}
            </a>
          }
        </div>

        <!-- Language Selector -->
        <div class="relative group">
          <button class="flex items-center gap-2 px-4 py-2 bg-gray-50 rounded-lg text-gray-700
                         hover:bg-primary-50 transition-colors duration-200
                         focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2"
                  (click)="toggleLanguageMenu()"
                  [attr.aria-expanded]="isLanguageMenuOpen">
            <i class="fas fa-globe text-primary-500"></i>
            <span>{{currentLanguage}}</span>
            <i class="fas fa-chevron-down text-sm transition-transform duration-200"
               [class.rotate-180]="isLanguageMenuOpen"></i>
          </button>

          <!-- Language Menu -->
          @if (isLanguageMenuOpen) {
            <div class="absolute bottom-full mb-2 w-48 bg-white rounded-xl shadow-hover border border-gray-100
                        animate-fade-in">
              <ul class="py-2">
                @for (lang of languages; track lang) {
                  <li>
                    <button class="w-full px-4 py-2 text-left text-gray-700 hover:bg-primary-50
                                   flex items-center gap-3 transition-colors duration-200"
                            (click)="selectLanguage(lang)"
                            [class.text-primary-500]="lang === currentLanguage">
                      <img [src]="'assets/flags/' + lang.toLowerCase() + '.svg'" 
                           [alt]="lang"
                           class="w-5 h-5 rounded-full">
                      {{lang}}
                    </button>
                  </li>
                }
              </ul>
            </div>
          }
        </div>
      </div>
    </div>
  </div>
</footer>

================
File: src/app/components/home/footer/footer.component.spec.ts
================
import { ComponentFixture, TestBed } from '@angular/core/testing';

import { FooterComponent } from './footer.component';

describe('FooterComponent', () => {
  let component: FooterComponent;
  let fixture: ComponentFixture<FooterComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [FooterComponent]
    })
    .compileComponents();
    
    fixture = TestBed.createComponent(FooterComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

================
File: src/app/components/home/footer/footer.component.ts
================
import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { RouterLink } from '@angular/router';

interface FooterLink {
  name: string;
  url: string;
  icon?: string;
}

interface SocialLink extends FooterLink {
  followers: string;
}

@Component({
  selector: 'app-footer',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './footer.component.html',
})
export class FooterComponent implements OnInit {
  currentYear = new Date().getFullYear();
  newsletterEmail = '';
  newsletterSuccess = false;
  isLanguageMenuOpen = false;
  currentLanguage = 'English';
  
  languages = [
    'English',
    'French',
    'Spanish',
    'German',
    'Chinese'
  ];

  socialLinks: SocialLink[] = [
    {
      name: 'Twitter',
      url: 'https://twitter.com/yourcompany',
      icon: 'fab fa-twitter',
      followers: '50K followers'
    },
    {
      name: 'LinkedIn',
      url: 'https://linkedin.com/company/yourcompany',
      icon: 'fab fa-linkedin',
      followers: '100K followers'
    },
    {
      name: 'GitHub',
      url: 'https://github.com/yourcompany',
      icon: 'fab fa-github',
      followers: '20K followers'
    },
    {
      name: 'Discord',
      url: 'https://discord.gg/yourcompany',
      icon: 'fab fa-discord',
      followers: '30K members'
    }
  ];

  productLinks: FooterLink[] = [
    {
      name: 'Features',
      url: '/features',
      icon: 'fas fa-star'
    },
    {
      name: 'Pricing',
      url: '/pricing',
      icon: 'fas fa-tag'
    },
    {
      name: 'Integrations',
      url: '/integrations',
      icon: 'fas fa-puzzle-piece'
    },
    {
      name: 'Enterprise',
      url: '/enterprise',
      icon: 'fas fa-building'
    },
    {
      name: 'Security',
      url: '/security',
      icon: 'fas fa-shield-alt'
    }
  ];

  companyLinks: FooterLink[] = [
    {
      name: 'About Us',
      url: '/about',
      icon: 'fas fa-info-circle'
    },
    {
      name: 'Careers',
      url: '/careers',
      icon: 'fas fa-briefcase'
    },
    {
      name: 'Blog',
      url: '/blog',
      icon: 'fas fa-rss'
    },
    {
      name: 'Press',
      url: '/press',
      icon: 'fas fa-newspaper'
    },
    {
      name: 'Contact',
      url: '/contact',
      icon: 'fas fa-envelope'
    }
  ];

  resourceLinks: FooterLink[] = [
    {
      name: 'Documentation',
      url: '/docs',
      icon: 'fas fa-book'
    },
    {
      name: 'Help Center',
      url: '/help',
      icon: 'fas fa-question-circle'
    },
    {
      name: 'API Reference',
      url: '/api',
      icon: 'fas fa-code'
    },
    {
      name: 'Community',
      url: '/community',
      icon: 'fas fa-users'
    },
    {
      name: 'Status',
      url: '/status',
      icon: 'fas fa-signal'
    }
  ];

  legalLinks: FooterLink[] = [
    {
      name: 'Terms of Service',
      url: '/terms'
    },
    {
      name: 'Privacy Policy',
      url: '/privacy'
    },
    {
      name: 'Cookie Policy',
      url: '/cookies'
    },
    {
      name: 'License',
      url: '/license'
    }
  ];

  ngOnInit() {
    // Initialize any necessary data
  }

  async subscribeNewsletter() {
    if (!this.newsletterEmail) return;

    try {
      // Here you would typically make an API call to subscribe the user
      // For now, we'll just simulate a successful subscription
      await new Promise(resolve => setTimeout(resolve, 1000));
      this.newsletterSuccess = true;
      this.newsletterEmail = '';

      // Reset success message after 3 seconds
      setTimeout(() => {
        this.newsletterSuccess = false;
      }, 3000);
    } catch (error) {
      console.error('Failed to subscribe:', error);
    }
  }

  toggleLanguageMenu() {
    this.isLanguageMenuOpen = !this.isLanguageMenuOpen;
  }

  selectLanguage(lang: string) {
    this.currentLanguage = lang;
    this.isLanguageMenuOpen = false;
    // Here you would typically implement language change logic
  }
}

================
File: src/app/components/home/hero/hero.component.html
================
<section id="hero" class="relative overflow-hidden py-20 sm:py-32 bg-gradient-to-b from-gray-50 to-white">
  <!-- Background Pattern -->
  <div class="absolute inset-0 bg-grid-pattern opacity-5 animate-pulse-slow"></div>
  
  <!-- Main Content -->
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Hero Text -->
    <article class="max-w-4xl mx-auto text-center">
      <div class="inline-block animate-float">
        <span class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary-50 text-primary-600 text-sm font-medium mb-8">
          <span class="relative flex h-2 w-2">
            <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-primary-400 opacity-75"></span>
            <span class="relative inline-flex rounded-full h-2 w-2 bg-primary-500"></span>
          </span>
          New Features Available!
        </span>
      </div>
      
      <h1 class="text-4xl sm:text-6xl lg:text-display-1 font-bold text-gray-700 tracking-tight mb-6 animate-fade-in">
        Start your <span class="text-primary-500 relative inline-block group">
          SaaS
          <span class="absolute bottom-0 left-0 w-full h-1 bg-primary-200 transform origin-left scale-x-0 transition-transform duration-300 group-hover:scale-x-100"></span>
        </span><br/>
        with <span class="bg-clip-text text-transparent bg-gradient-to-r from-primary-500 to-secondary-500 relative inline-block hover:opacity-90 transition-opacity cursor-default">Angular!</span>
      </h1>
      
      <p class="text-lg sm:text-xl text-gray-500 max-w-2xl mx-auto mb-12 animate-slide-up leading-relaxed">
        Build scalable applications with modern tools and frameworks.
        Experience the power of Angular with our starter template.
      </p>
      
      <!-- CTA Buttons -->
      <div class="flex flex-col sm:flex-row justify-center gap-4 mb-16 animate-slide-up">
        <button class="group px-8 py-4 bg-primary-500 text-white rounded-xl font-medium 
                     hover:bg-primary-600 transform hover:-translate-y-1 transition-all duration-200
                     shadow-soft hover:shadow-hover focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2"
                aria-label="Get started with our platform">
          <span class="flex items-center justify-center gap-2">
            Get Started
            <i class="fas fa-arrow-right transform group-hover:translate-x-1 transition-transform"></i>
          </span>
        </button>
        <button class="group px-8 py-4 bg-white text-primary-500 rounded-xl font-medium 
                     border-2 border-primary-500 hover:bg-primary-50
                     transform hover:-translate-y-1 transition-all duration-200
                     focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2"
                aria-label="Learn more about our features">
          <span class="flex items-center justify-center gap-2">
            Learn More
            <i class="fas fa-info-circle transform group-hover:rotate-12 transition-transform"></i>
          </span>
        </button>
      </div>
    </article>

    <!-- Features List -->
    <article class="max-w-3xl mx-auto mb-20">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6 text-gray-600">
        @for (feature of features; track feature) {
          <div class="group flex items-center gap-3 p-4 bg-white rounded-lg shadow-soft
                      hover:shadow-hover transform hover:-translate-y-1 transition-all duration-200
                      cursor-pointer"
               role="button"
               tabindex="0"
               [attr.aria-label]="'Learn more about ' + feature">
            <div class="relative">
              <div class="absolute inset-0 bg-primary-200 rounded-full transform scale-0 group-hover:scale-150 transition-transform duration-300 opacity-20"></div>
              <i class="fa-solid fa-check text-primary-500 bg-primary-50 p-2 rounded-full relative z-10"></i>
            </div>
            <span class="font-medium group-hover:text-primary-600 transition-colors">{{feature}}</span>
          </div>
        }
      </div>
    </article>

    <!-- Trusted By Section -->
    <article class="text-center animate-fade-in">
      <h6 class="font-bold text-gray-400 tracking-wider mb-12 flex items-center justify-center gap-2">
        <span class="h-px w-8 bg-gray-300"></span>
        TRUSTED BY TEAMS AT
        <span class="h-px w-8 bg-gray-300"></span>
      </h6>
      <div class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 gap-8 justify-items-center items-center">
        @for (company of companies; track company) {
          <div class="group relative transform hover:scale-105 transition-all duration-300 cursor-pointer"
               role="img"
               [attr.aria-label]="company.name + ' uses our platform'">
            <div class="absolute inset-0 bg-white opacity-0 group-hover:opacity-100 rounded-lg shadow-hover transition-all duration-300"></div>
            <img
              [ngSrc]="company.src"
              [alt]="company.name"
              width="120"
              height="55"
              class="object-contain relative z-10 opacity-60 group-hover:opacity-100 transition-opacity duration-300"
              loading="lazy"
            />
          </div>
        }
      </div>
    </article>

    <!-- Scroll Indicator -->
    <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce hidden sm:block">
      <button class="text-gray-400 hover:text-primary-500 transition-colors focus:outline-none"
              aria-label="Scroll to features section">
        <i class="fas fa-chevron-down text-2xl"></i>
      </button>
    </div>
  </div>
</section>

================
File: src/app/components/home/hero/hero.component.spec.ts
================
import { ComponentFixture, TestBed } from '@angular/core/testing';

import { HeroComponent } from './hero.component';

describe('HeroComponent', () => {
  let component: HeroComponent;
  let fixture: ComponentFixture<HeroComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [HeroComponent]
    })
    .compileComponents();
    
    fixture = TestBed.createComponent(HeroComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

================
File: src/app/components/home/hero/hero.component.ts
================
import { Component } from '@angular/core';
import { CommonModule, NgOptimizedImage } from '@angular/common';

import { Company } from '../../../models/company';

@Component({
  selector: 'section-hero',
  standalone: true,
  imports: [CommonModule, NgOptimizedImage],
  templateUrl: './hero.component.html',
  styleUrl: './hero.component.sass',
})
export class HeroComponent {
  features: string[] = [
    'Easy Integration',
    'Modern Design',
    'Secure Platform'
  ];

  companies: Company[] = [
    {
      name: 'Nike',
      src: '../../../../assets/logos/nike.svg',
    },
    {
      name: 'Stripe',
      src: '../../../../assets/logos/stripe.svg',
    },
    {
      name: 'Disney',
      src: '../../../../assets/logos/disney.svg',
    },
    {
      name: 'Coca-Cola',
      src: '../../../../assets/logos/coca-cola.svg',
    },
    {
      name: 'Nasa',
      src: '../../../../assets/logos/nasa.svg',
    },
  ];
}

================
File: src/app/components/home/navbar/navbar.component.html
================
<header class="sticky-header" [ngClass]="{ sticked: isSticky }">
  <div class="container mx-auto flex justify-between h-16 px-6">
    <div class="flex items-center">
      <h1 class="headline cursor-pointer">
        <a>angular-saas</a>
      </h1>
    </div>
    <nav class="hidden md:flex justify-center items-center">
      <ul class="flex justify-center items-center gap-5">
        <li class="nav-item">
          <a routerLink="." fragment="features">Features</a>
        </li>
        <li class="nav-item">
          <a routerLink="." fragment="pricing">Pricing</a>
        </li>
      </ul>
    </nav>
    <div class="hidden md:flex items-center gap-2">
      <div class="m-button-outline text-sm !px-4">Sign In</div>
      <div class="m-button-solid text-sm !px-4">Get Started</div>
    </div>
    <div
      (click)="toggleMenu()"
      class="flex md:hidden items-center text-2xl cursor-pointer"
    >
      <i class="fa-solid fa-bars"></i>
    </div>
    <div class="mobile-menu" [ngClass]="{ open: isMenuOpen }">
      <div (click)="toggleMenu()" class="flex ml-auto text-3xl cursor-pointer">
        <i class="fa-solid fa-xmark my-auto"></i>
      </div>
      <nav class="flex flex-col justify-center items-center text-center">
        <ul>
          <li class="nav-item text-2xl p-3">
            <a routerLink="." fragment="features">Features</a>
          </li>
          <li class="nav-item text-2xl p-3">
            <a routerLink="." fragment="pricing">Pricing</a>
          </li>
        </ul>
      </nav>
      <div class="flex flex-col items-center gap-2">
        <div class="m-button-outline !w-[250px] !py-2">Sign In</div>
        <div class="m-button-solid !w-[250px] !py-2">Get Started</div>
      </div>
    </div>
  </div>
</header>

================
File: src/app/components/home/navbar/navbar.component.sass
================
.nav-item
    font-weight: 500
    color: #343140

    cursor: pointer
    &:hover
        color: #006AFF

.sticky-header
    position: sticky !important
    top: 0px !important
    z-index: 9999 !important
    width: 100%
    border: solid 1px transparent
    transition: all 150ms linear

.sticked
    border-bottom-color: #e1e3e5
    background-color: #FFF
    transition: all 150ms linear

.mobile-menu
    position: absolute
    top: 0
    left: 0

    display: flex
    flex-direction: column
    align-items: center

    transform: translateX(100%)
    visibility: hidden
    opacity: 0

    background-color: #F7F7F8
    width: 100%
    height: 100vh
    gap: 16px
    padding: 16px

    transition: transform .45s cubic-bezier(.6,.6,0,1),opacity .45s cubic-bezier(.6,.6,0,1),visibility .45s cubic-bezier(.6,.6,0,1)
    &.open
        visibility: visible
        opacity: 1

        transform: translateX(0%)

================
File: src/app/components/home/navbar/navbar.component.spec.ts
================
import { ComponentFixture, TestBed } from '@angular/core/testing';

import { NavbarComponent } from './navbar.component';

describe('NavbarComponent', () => {
  let component: NavbarComponent;
  let fixture: ComponentFixture<NavbarComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [NavbarComponent]
    })
    .compileComponents();
    
    fixture = TestBed.createComponent(NavbarComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

================
File: src/app/components/home/navbar/navbar.component.ts
================
import { Component, HostListener } from '@angular/core';

import { CommonModule } from '@angular/common';
import { RouterLink } from '@angular/router';

@Component({
  selector: 'app-navbar',
  standalone: true,
  imports: [CommonModule, RouterLink],
  templateUrl: './navbar.component.html',
  styleUrl: './navbar.component.sass',
})
export class NavbarComponent {
  isSticky: boolean = false;
  isMenuOpen: boolean = false;

  @HostListener('window:scroll', ['$event'])
  handleScroll() {
    const scrollOffset =
      window.pageYOffset ||
      document.documentElement.scrollTop ||
      document.body.scrollTop ||
      0;

    this.isSticky = scrollOffset > 80;
  }

  @HostListener('window:resize', ['$event'])
  onResize(event: any) {
    const screenWidth = event.target.innerWidth;
    if (screenWidth >= 768) {
      this.isMenuOpen = false;
      document.documentElement.style.overflow = '';
    }
  }

  toggleMenu() {
    this.isMenuOpen = !this.isMenuOpen;
    if (this.isMenuOpen) {
      document.documentElement.style.overflow = 'hidden';
    } else {
      document.documentElement.style.overflow = '';
    }
  }
}

================
File: src/app/components/home/pricing/pricing.component.html
================
<section id="pricing" class="py-24 bg-gradient-to-b from-gray-50 to-white relative overflow-hidden">
  <!-- Background Elements -->
  <div class="absolute inset-0 bg-grid-pattern opacity-5 animate-pulse-slow"></div>
  <div class="absolute top-0 left-1/2 -translate-x-1/2 w-full h-48 bg-primary-500/5 blur-3xl transform -skew-y-6"></div>
  
  <div class="container mx-auto px-4 sm:px-6 lg:px-8 relative">
    <!-- Section Header -->
    <div class="max-w-3xl mx-auto text-center mb-16">
      <span class="inline-block text-primary-600 font-semibold mb-4 animate-slide-up">
        <span class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary-50">
          <i class="fas fa-tag text-primary-500"></i>
          Simple Pricing
        </span>
      </span>
      
      <h2 class="text-3xl sm:text-4xl lg:text-display-2 font-bold text-gray-700 tracking-tight mb-6 animate-fade-in">
        Choose the perfect plan for your
        <span class="relative inline-block">
          <span class="absolute inset-x-0 bottom-2 h-3 bg-primary-200 opacity-50"></span>
          <span class="relative">business</span>
        </span>
      </h2>
      <p class="text-lg text-gray-500 max-w-2xl mx-auto mb-8 animate-fade-in">
        Start with our free plan and upgrade as you grow. All plans include core features.
      </p>

      <!-- Billing Toggle -->
      <div class="flex items-center justify-center gap-4 mb-12">
        <span class="text-gray-600 font-medium">Monthly</span>
        <button class="relative w-16 h-8 rounded-full bg-primary-100 group transition-colors
                     hover:bg-primary-200 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2"
                [class.bg-primary-500]="isAnnual"
                (click)="toggleBilling()"
                aria-label="Toggle billing frequency">
          <span class="absolute left-1 top-1 w-6 h-6 rounded-full bg-white shadow-md transform transition-transform duration-200"
                [class.translate-x-8]="isAnnual"></span>
        </button>
        <span class="text-gray-600 font-medium">
          Annual
          <span class="inline-block ml-1 text-sm text-primary-500 font-semibold">Save 20%</span>
        </span>
      </div>
    </div>

    <!-- Pricing Cards -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-7xl mx-auto">
      <!-- Free Plan -->
      <div class="group relative bg-white rounded-2xl shadow-soft hover:shadow-hover 
                  transform hover:-translate-y-1 transition-all duration-300 animate-scale
                  overflow-hidden">
        <div class="absolute inset-0 bg-gradient-to-br from-gray-50 to-transparent opacity-0 
                    group-hover:opacity-100 transition-opacity duration-300"></div>
        <div class="relative p-8">
          <h3 class="text-xl font-semibold text-gray-700 mb-4">Free</h3>
          <div class="flex items-baseline mb-6">
            <span class="text-4xl font-bold text-gray-900">$0</span>
            <span class="text-gray-500 ml-2">/month</span>
          </div>
          
          <ul class="space-y-4 mb-8">
            <li class="flex items-center gap-3 text-gray-600">
              <i class="fas fa-check text-primary-500 bg-primary-50 p-1 rounded-full"></i>
              <span>Up to 5 users</span>
            </li>
            <li class="flex items-center gap-3 text-gray-600">
              <i class="fas fa-check text-primary-500 bg-primary-50 p-1 rounded-full"></i>
              <span>Basic analytics</span>
            </li>
            <li class="flex items-center gap-3 text-gray-600">
              <i class="fas fa-check text-primary-500 bg-primary-50 p-1 rounded-full"></i>
              <span>1GB storage</span>
            </li>
          </ul>
          
          <button class="w-full px-6 py-3 bg-white text-primary-500 rounded-xl font-medium 
                       border-2 border-primary-500 hover:bg-primary-50 group-hover:bg-primary-500 group-hover:text-white
                       transform transition-all duration-200
                       focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2">
            Get Started
          </button>
        </div>
      </div>

      <!-- Pro Plan -->
      <div class="group relative bg-white rounded-2xl shadow-hover 
                  transform hover:-translate-y-1 transition-all duration-300 animate-scale
                  overflow-hidden ring-2 ring-primary-500">
        <div class="absolute top-0 right-0">
          <span class="inline-block bg-primary-500 text-white text-sm font-semibold px-4 py-1 rounded-bl-xl">
            Popular
          </span>
        </div>
        <div class="absolute inset-0 bg-gradient-to-br from-primary-50 to-transparent opacity-0 
                    group-hover:opacity-100 transition-opacity duration-300"></div>
        <div class="relative p-8">
          <h3 class="text-xl font-semibold text-gray-700 mb-4">Pro</h3>
          <div class="flex items-baseline mb-6">
            <span class="text-4xl font-bold text-gray-900">${{isAnnual ? '49' : '59'}}</span>
            <span class="text-gray-500 ml-2">/month</span>
          </div>
          
          <ul class="space-y-4 mb-8">
            <li class="flex items-center gap-3 text-gray-600">
              <i class="fas fa-check text-primary-500 bg-primary-50 p-1 rounded-full"></i>
              <span>Up to 20 users</span>
            </li>
            <li class="flex items-center gap-3 text-gray-600">
              <i class="fas fa-check text-primary-500 bg-primary-50 p-1 rounded-full"></i>
              <span>Advanced analytics</span>
            </li>
            <li class="flex items-center gap-3 text-gray-600">
              <i class="fas fa-check text-primary-500 bg-primary-50 p-1 rounded-full"></i>
              <span>10GB storage</span>
            </li>
            <li class="flex items-center gap-3 text-gray-600">
              <i class="fas fa-check text-primary-500 bg-primary-50 p-1 rounded-full"></i>
              <span>Priority support</span>
            </li>
          </ul>
          
          <button class="w-full px-6 py-3 bg-primary-500 text-white rounded-xl font-medium 
                       hover:bg-primary-600 transform transition-all duration-200
                       focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2
                       shadow-soft hover:shadow-hover">
            Start Free Trial
          </button>
        </div>
      </div>

      <!-- Enterprise Plan -->
      <div class="group relative bg-white rounded-2xl shadow-soft hover:shadow-hover 
                  transform hover:-translate-y-1 transition-all duration-300 animate-scale
                  overflow-hidden">
        <div class="absolute inset-0 bg-gradient-to-br from-gray-50 to-transparent opacity-0 
                    group-hover:opacity-100 transition-opacity duration-300"></div>
        <div class="relative p-8">
          <h3 class="text-xl font-semibold text-gray-700 mb-4">Enterprise</h3>
          <div class="flex items-baseline mb-6">
            <span class="text-4xl font-bold text-gray-900">${{isAnnual ? '99' : '119'}}</span>
            <span class="text-gray-500 ml-2">/month</span>
          </div>
          
          <ul class="space-y-4 mb-8">
            <li class="flex items-center gap-3 text-gray-600">
              <i class="fas fa-check text-primary-500 bg-primary-50 p-1 rounded-full"></i>
              <span>Unlimited users</span>
            </li>
            <li class="flex items-center gap-3 text-gray-600">
              <i class="fas fa-check text-primary-500 bg-primary-50 p-1 rounded-full"></i>
              <span>Custom analytics</span>
            </li>
            <li class="flex items-center gap-3 text-gray-600">
              <i class="fas fa-check text-primary-500 bg-primary-50 p-1 rounded-full"></i>
              <span>Unlimited storage</span>
            </li>
            <li class="flex items-center gap-3 text-gray-600">
              <i class="fas fa-check text-primary-500 bg-primary-50 p-1 rounded-full"></i>
              <span>24/7 support</span>
            </li>
            <li class="flex items-center gap-3 text-gray-600">
              <i class="fas fa-check text-primary-500 bg-primary-50 p-1 rounded-full"></i>
              <span>Custom integrations</span>
            </li>
          </ul>
          
          <button class="w-full px-6 py-3 bg-white text-primary-500 rounded-xl font-medium 
                       border-2 border-primary-500 hover:bg-primary-50 group-hover:bg-primary-500 group-hover:text-white
                       transform transition-all duration-200
                       focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2">
            Contact Sales
          </button>
        </div>
      </div>
    </div>

    <!-- Features Comparison -->
    <div class="mt-20 max-w-4xl mx-auto">
      <h3 class="text-2xl font-bold text-gray-700 mb-8 text-center">Compare Plans</h3>
      
      <div class="overflow-x-auto">
        <table class="w-full">
          <thead>
            <tr class="border-b border-gray-200">
              <th class="py-4 px-6 text-left text-gray-500 font-medium">Features</th>
              <th class="py-4 px-6 text-center text-gray-500 font-medium">Free</th>
              <th class="py-4 px-6 text-center text-gray-500 font-medium">Pro</th>
              <th class="py-4 px-6 text-center text-gray-500 font-medium">Enterprise</th>
            </tr>
          </thead>
          <tbody>
            <tr class="border-b border-gray-200 hover:bg-gray-50 transition-colors">
              <td class="py-4 px-6 text-gray-600">Users</td>
              <td class="py-4 px-6 text-center text-gray-600">Up to 5</td>
              <td class="py-4 px-6 text-center text-gray-600">Up to 20</td>
              <td class="py-4 px-6 text-center text-gray-600">Unlimited</td>
            </tr>
            <tr class="border-b border-gray-200 hover:bg-gray-50 transition-colors">
              <td class="py-4 px-6 text-gray-600">Storage</td>
              <td class="py-4 px-6 text-center text-gray-600">1GB</td>
              <td class="py-4 px-6 text-center text-gray-600">10GB</td>
              <td class="py-4 px-6 text-center text-gray-600">Unlimited</td>
            </tr>
            <tr class="border-b border-gray-200 hover:bg-gray-50 transition-colors">
              <td class="py-4 px-6 text-gray-600">Support</td>
              <td class="py-4 px-6 text-center text-gray-600">Email</td>
              <td class="py-4 px-6 text-center text-gray-600">Priority</td>
              <td class="py-4 px-6 text-center text-gray-600">24/7 Dedicated</td>
            </tr>
            <tr class="border-b border-gray-200 hover:bg-gray-50 transition-colors">
              <td class="py-4 px-6 text-gray-600">Analytics</td>
              <td class="py-4 px-6 text-center text-gray-600">Basic</td>
              <td class="py-4 px-6 text-center text-gray-600">Advanced</td>
              <td class="py-4 px-6 text-center text-gray-600">Custom</td>
            </tr>
            <tr class="hover:bg-gray-50 transition-colors">
              <td class="py-4 px-6 text-gray-600">API Access</td>
              <td class="py-4 px-6 text-center">
                <i class="fas fa-times text-gray-400"></i>
              </td>
              <td class="py-4 px-6 text-center">
                <i class="fas fa-check text-primary-500"></i>
              </td>
              <td class="py-4 px-6 text-center">
                <i class="fas fa-check text-primary-500"></i>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>

    <!-- FAQ Section -->
    <div class="mt-20 max-w-3xl mx-auto">
      <div class="text-center mb-12">
        <span class="inline-block text-primary-600 font-semibold mb-4 animate-slide-up">
          <span class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary-50">
            <i class="fas fa-question-circle text-primary-500"></i>
            Support
          </span>
        </span>
        
        <h3 class="text-2xl sm:text-3xl font-bold text-gray-700 mb-4">Frequently Asked Questions</h3>
        <p class="text-gray-500">Have questions? We're here to help.</p>
      </div>
      
      <div class="space-y-4">
        @for (faq of faqs; track faq) {
          <div class="bg-white rounded-xl shadow-soft overflow-hidden group"
               [class.ring-2]="faq.isOpen"
               [class.ring-primary-500]="faq.isOpen">
            <button class="w-full px-6 py-4 text-left hover:bg-gray-50 transition-colors duration-200
                          focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2"
                    (click)="faq.isOpen = !faq.isOpen"
                    [attr.aria-expanded]="faq.isOpen">
              <div class="flex items-center justify-between">
                <div class="flex items-center gap-3">
                  <div class="flex-shrink-0 w-8 h-8 rounded-full bg-primary-50 flex items-center justify-center
                              group-hover:bg-primary-100 transition-colors duration-200">
                    <i class="fas fa-question text-sm text-primary-500"></i>
                  </div>
                  <span class="font-medium text-gray-700 group-hover:text-gray-900 transition-colors duration-200">
                    {{faq.question}}
                  </span>
                </div>
                <div class="flex-shrink-0 ml-4">
                  <div class="w-6 h-6 rounded-full flex items-center justify-center
                              group-hover:bg-primary-50 transition-all duration-200"
                       [class.bg-primary-50]="faq.isOpen"
                       [class.rotate-180]="faq.isOpen">
                    <i class="fas fa-chevron-down text-sm transition-transform duration-200"
                       [class.text-gray-400]="!faq.isOpen"
                       [class.text-primary-500]="faq.isOpen"></i>
                  </div>
                </div>
              </div>
            </button>
            @if (faq.isOpen) {
              <div class="px-6 pb-4 animate-fade-in">
                <div class="pt-4 border-t border-gray-100">
                  <div class="flex gap-3">
                    <div class="flex-shrink-0 w-8 h-8 rounded-full bg-primary-50 flex items-center justify-center">
                      <i class="fas fa-info text-sm text-primary-500"></i>
                    </div>
                    <p class="text-gray-600 leading-relaxed">{{faq.answer}}</p>
                  </div>
                  @if (faq.additionalInfo) {
                    <div class="mt-4 flex items-center gap-2">
                      <i class="fas fa-lightbulb text-yellow-500"></i>
                      <p class="text-sm text-gray-500">{{faq.additionalInfo}}</p>
                    </div>
                  }
                  @if (faq.links?.length) {
                    <div class="mt-4 flex flex-wrap gap-3">
                      @for (link of faq.links; track link) {
                        <a [href]="link.url" 
                           class="inline-flex items-center gap-2 px-4 py-2 bg-gray-50 rounded-lg text-sm text-gray-600
                                  hover:bg-primary-50 hover:text-primary-600 transition-colors duration-200">
                          <i [class]="link.icon"></i>
                          {{link.text}}
                        </a>
                      }
                    </div>
                  }
                </div>
              </div>
            }
          </div>
        }
      </div>

      <!-- Contact Support -->
      <div class="mt-12 text-center">
        <p class="text-gray-500 mb-4">Still have questions?</p>
        <a href="#contact" 
           class="inline-flex items-center gap-2 px-6 py-3 bg-white text-primary-600 rounded-xl font-medium 
                  border-2 border-primary-500 hover:bg-primary-50 
                  transform hover:-translate-y-1 transition-all duration-200
                  focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2
                  shadow-soft hover:shadow-hover">
          <i class="fas fa-headset"></i>
          Contact Support
        </a>
      </div>

      <!-- Quick Links -->
      <div class="mt-16 grid grid-cols-1 sm:grid-cols-3 gap-6">
        <!-- Documentation -->
        <a href="#docs" 
           class="group p-6 bg-white rounded-xl shadow-soft hover:shadow-hover
                  transform hover:-translate-y-1 transition-all duration-200">
          <div class="flex items-center gap-4">
            <div class="w-12 h-12 rounded-xl bg-primary-50 flex items-center justify-center
                        group-hover:bg-primary-500 transition-colors duration-200">
              <i class="fas fa-book text-primary-500 group-hover:text-white transition-colors duration-200"></i>
            </div>
            <div>
              <h4 class="font-semibold text-gray-700 group-hover:text-primary-500 transition-colors duration-200">
                Documentation
              </h4>
              <p class="text-sm text-gray-500">Detailed guides and API docs</p>
            </div>
          </div>
        </a>

        <!-- Community -->
        <a href="#community" 
           class="group p-6 bg-white rounded-xl shadow-soft hover:shadow-hover
                  transform hover:-translate-y-1 transition-all duration-200">
          <div class="flex items-center gap-4">
            <div class="w-12 h-12 rounded-xl bg-primary-50 flex items-center justify-center
                        group-hover:bg-primary-500 transition-colors duration-200">
              <i class="fas fa-users text-primary-500 group-hover:text-white transition-colors duration-200"></i>
            </div>
            <div>
              <h4 class="font-semibold text-gray-700 group-hover:text-primary-500 transition-colors duration-200">
                Community
              </h4>
              <p class="text-sm text-gray-500">Join our developer community</p>
            </div>
          </div>
        </a>

        <!-- Video Tutorials -->
        <a href="#tutorials" 
           class="group p-6 bg-white rounded-xl shadow-soft hover:shadow-hover
                  transform hover:-translate-y-1 transition-all duration-200">
          <div class="flex items-center gap-4">
            <div class="w-12 h-12 rounded-xl bg-primary-50 flex items-center justify-center
                        group-hover:bg-primary-500 transition-colors duration-200">
              <i class="fas fa-play text-primary-500 group-hover:text-white transition-colors duration-200"></i>
            </div>
            <div>
              <h4 class="font-semibold text-gray-700 group-hover:text-primary-500 transition-colors duration-200">
                Video Tutorials
              </h4>
              <p class="text-sm text-gray-500">Watch step-by-step guides</p>
            </div>
          </div>
        </a>
      </div>
    </div>
  </div>
</section>

================
File: src/app/components/home/pricing/pricing.component.sass
================
.pricing-box
    position: relative
    display: flex
    flex-direction: column

    width: 100%
    height: 100%
    max-width: 300px

    padding: 18px
    gap: 16px
    border-radius: 6px
    border: solid 1px #e1e3e5
    background-color: #FFF
    transition: all 150ms ease
    span
        font-weight: 500
        font-size: 24px
    h3
        color: #343140
        font-size: 32px
        font-weight: 700
    &.highlighted
        border: solid 1px #006AFF
        box-shadow: 0px 0px 12px #006aff7d

.switch
    position: relative
    display: inline-block
    width: 46px
    height: 24px
    input
        opacity: 0
        width: 0
        height: 0
    .slider
        position: absolute
        cursor: pointer
        top: 0
        left: 0
        right: 0
        bottom: 0
        background-color: #ccc
        border-radius: 32px
        -webkit-transition: .4s
        transition: .4s
        &:before
            content: ""
            position: absolute
            height: 16px
            width: 16px
            left: 4px
            bottom: 4px
            border-radius: 50%
            background-color: white
            -webkit-transition: .4s
            transition: .4s
    input
        &:checked + .slider
            background-color: #006AFF
        &:focus + .slider
            box-shadow: 0 0 1px #006AFF
        &:checked + .slider:before
            -webkit-transform: translateX(21px)
            -ms-transform: translateX(21px)
            transform: translateX(21px)

================
File: src/app/components/home/pricing/pricing.component.spec.ts
================
import { ComponentFixture, TestBed } from '@angular/core/testing';

import { PricingComponent } from './pricing.component';

describe('PricingComponent', () => {
  let component: PricingComponent;
  let fixture: ComponentFixture<PricingComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [PricingComponent]
    })
    .compileComponents();
    
    fixture = TestBed.createComponent(PricingComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

================
File: src/app/components/home/pricing/pricing.component.ts
================
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';

interface FAQLink {
  text: string;
  url: string;
  icon: string;
}

interface FAQ {
  question: string;
  answer: string;
  isOpen: boolean;
  additionalInfo?: string;
  links?: FAQLink[];
}

@Component({
  selector: 'section-pricing',
  standalone: true,
  imports: [CommonModule],
  templateUrl: './pricing.component.html',
})
export class PricingComponent {
  isAnnual = false;

  toggleBilling() {
    this.isAnnual = !this.isAnnual;
  }

  faqs: FAQ[] = [
    {
      question: 'What payment methods do you accept?',
      answer: 'We accept all major credit cards, PayPal, and bank transfers for annual plans.',
      isOpen: false,
      additionalInfo: 'All payments are processed securely through Stripe.',
      links: [
        {
          text: 'View Payment Methods',
          url: '#payment-methods',
          icon: 'fas fa-credit-card'
        },
        {
          text: 'Security Info',
          url: '#security',
          icon: 'fas fa-shield-alt'
        }
      ]
    },
    {
      question: 'Can I change my plan later?',
      answer: 'Yes, you can upgrade or downgrade your plan at any time. Changes will be reflected in your next billing cycle.',
      isOpen: false,
      additionalInfo: 'Pro-rated charges will be automatically calculated for plan changes.',
      links: [
        {
          text: 'How to Change Plans',
          url: '#change-plan',
          icon: 'fas fa-exchange-alt'
        }
      ]
    },
    {
      question: 'Is there a free trial available?',
      answer: 'Yes, we offer a 14-day free trial on our Pro plan. No credit card required.',
      isOpen: false,
      additionalInfo: 'You can upgrade to a paid plan at any time during your trial.',
      links: [
        {
          text: 'Start Free Trial',
          url: '#trial',
          icon: 'fas fa-rocket'
        }
      ]
    },
    {
      question: 'What happens when I upgrade or downgrade?',
      answer: 'When you upgrade, you\'ll immediately get access to new features. When downgrading, you\'ll retain access until your current billing period ends.',
      isOpen: false,
      links: [
        {
          text: 'View Plan Comparison',
          url: '#compare',
          icon: 'fas fa-table'
        }
      ]
    },
    {
      question: 'Do you offer refunds?',
      answer: 'Yes, we offer a 30-day money-back guarantee for all paid plans.',
      isOpen: false,
      additionalInfo: 'Refund requests are typically processed within 3-5 business days.',
      links: [
        {
          text: 'Refund Policy',
          url: '#refunds',
          icon: 'fas fa-undo'
        }
      ]
    },
  ];
}

================
File: src/app/core/core.module.ts
================
import { NgModule, Optional, SkipSelf } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';
import { AuthInterceptor } from './interceptors/auth.interceptor';
import { AuthService } from './services/auth.service';
import { AuthGuard } from './guards/auth.guard';

@NgModule({
    declarations: [],
    imports: [
        CommonModule,
        HttpClientModule
    ],
    providers: [
        AuthService,
        AuthGuard,
        {
            provide: HTTP_INTERCEPTORS,
            useClass: AuthInterceptor,
            multi: true
        }
    ]
})
export class CoreModule {
    constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {
        if (parentModule) {
            throw new Error('CoreModule is already loaded. Import it in the AppModule only.');
        }
    }
}

================
File: src/app/core/guards/auth.guard.ts
================
import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { AuthService } from '../services/auth.service';

@Injectable({
    providedIn: 'root'
})
export class AuthGuard {
    constructor(
        private authService: AuthService,
        private router: Router
    ) {}

    canActivate(): boolean {
        if (this.authService.isLoggedIn()) {
            return true;
        }

        this.router.navigate(['/auth/login']);
        return false;
    }

    canActivateChild(): boolean {
        return this.canActivate();
    }
}

================
File: src/app/core/interceptors/auth.interceptor.ts
================
import { Injectable } from '@angular/core';
import {
    HttpRequest,
    HttpHandler,
    HttpEvent,
    HttpInterceptor
} from '@angular/common/http';
import { Observable } from 'rxjs';
import { AuthService } from '../services/auth.service';

@Injectable()
export class AuthInterceptor implements HttpInterceptor {
    constructor(private authService: AuthService) {}

    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {
        const token = this.authService.getToken();
        
        if (token) {
            request = request.clone({
                setHeaders: {
                    Authorization: `Bearer ${token}`
                }
            });
        }
        
        return next.handle(request);
    }
}

================
File: src/app/core/models/auth.models.ts
================
export interface RegisterRequest {
    firstName: string;
    lastName: string;
    email: string;
    password: string;
}

export interface LoginRequest {
    email: string;
    password: string;
}

export interface AuthResponse {
    token: string;
    type: string;
    id: number;
    email: string;
    firstName: string;
    lastName: string;
    roles: string[];
    enabled: boolean;
}

export interface User {
    id: number;
    email: string;
    firstName: string;
    lastName: string;
    roles: string[];
    enabled: boolean;
}

================
File: src/app/core/services/auth.service.ts
================
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { BehaviorSubject, Observable, tap } from 'rxjs';
import { AuthResponse, LoginRequest, RegisterRequest, User } from '../models/auth.models';
import { environment } from '../../../environments/environment';

@Injectable({
    providedIn: 'root'
})
export class AuthService {
    private readonly API_URL = `${environment.apiUrl}/auth`;
    private currentUserSubject = new BehaviorSubject<User | null>(null);
    public currentUser$ = this.currentUserSubject.asObservable();

    constructor(private http: HttpClient) {
        this.loadUserFromStorage();
    }

    private loadUserFromStorage(): void {
        const token = localStorage.getItem('token');
        const user = localStorage.getItem('user');
        if (token && user) {
            this.currentUserSubject.next(JSON.parse(user));
        }
    }

    register(request: RegisterRequest): Observable<AuthResponse> {
        return this.http.post<AuthResponse>(`${this.API_URL}/register`, request)
            .pipe(
                tap(response => this.handleAuthResponse(response))
            );
    }

    login(request: LoginRequest): Observable<AuthResponse> {
        return this.http.post<AuthResponse>(`${this.API_URL}/login`, request)
            .pipe(
                tap(response => this.handleAuthResponse(response))
            );
    }

    verifyEmail(token: string): Observable<string> {
        return this.http.get<string>(`${this.API_URL}/verify-email?token=${token}`);
    }

    resendVerificationEmail(email: string): Observable<string> {
        return this.http.post<string>(`${this.API_URL}/resend-verification`, null, {
            params: { email }
        });
    }

    forgotPassword(email: string): Observable<string> {
        return this.http.post<string>(`${this.API_URL}/forgot-password`, null, {
            params: { email }
        });
    }

    resetPassword(token: string, newPassword: string): Observable<string> {
        return this.http.post<string>(`${this.API_URL}/reset-password`, null, {
            params: { token, newPassword }
        });
    }

    logout(): void {
        localStorage.removeItem('token');
        localStorage.removeItem('user');
        this.currentUserSubject.next(null);
    }

    private handleAuthResponse(response: AuthResponse): void {
        if (response && response.token) {
            localStorage.setItem('token', response.token);
            const user: User = {
                id: response.id,
                email: response.email,
                firstName: response.firstName,
                lastName: response.lastName,
                roles: response.roles,
                enabled: response.enabled
            };
            localStorage.setItem('user', JSON.stringify(user));
            this.currentUserSubject.next(user);
        }
    }

    isLoggedIn(): boolean {
        return !!this.currentUserSubject.value;
    }

    getToken(): string | null {
        return localStorage.getItem('token');
    }
}

================
File: src/app/features/auth/auth-routing.module.ts
================
import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { LoginComponent } from './components/login/login.component';
import { RegisterComponent } from './components/register/register.component';
import { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';
import { ResetPasswordComponent } from './components/reset-password/reset-password.component';
import { VerifyEmailComponent } from './components/verify-email/verify-email.component';

const routes: Routes = [
    {
        path: 'auth',
        children: [
            { path: 'login', component: LoginComponent },
            { path: 'register', component: RegisterComponent },
            { path: 'forgot-password', component: ForgotPasswordComponent },
            { path: 'reset-password', component: ResetPasswordComponent },
            { path: 'verify-email', component: VerifyEmailComponent },
            { path: '', redirectTo: 'login', pathMatch: 'full' }
        ]
    }
];

@NgModule({
    imports: [RouterModule.forChild(routes)],
    exports: [RouterModule]
})
export class AuthRoutingModule { }

================
File: src/app/features/auth/auth.module.ts
================
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterModule } from '@angular/router';
import { ReactiveFormsModule } from '@angular/forms';
 
import { LoginComponent } from './components/login/login.component';
import { RegisterComponent } from './components/register/register.component';
import { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';
import { ResetPasswordComponent } from './components/reset-password/reset-password.component';
import { VerifyEmailComponent } from './components/verify-email/verify-email.component';
import { AuthRoutingModule } from './auth-routing.module';

@NgModule({
    declarations: [
        LoginComponent,
        RegisterComponent,
        ForgotPasswordComponent,
        ResetPasswordComponent,
        VerifyEmailComponent
    ],
    imports: [
        CommonModule,
        RouterModule,
        ReactiveFormsModule,
        AuthRoutingModule
    ]
})
export class AuthModule { }

================
File: src/app/features/auth/components/forgot-password/forgot-password.component.html
================
<section class="relative overflow-hidden min-h-screen flex items-center justify-center bg-gradient-to-b from-gray-50 to-white py-12 px-4 sm:px-6 lg:px-8">
    <!-- Background Pattern -->
    <div class="absolute inset-0 bg-grid-pattern opacity-5 animate-pulse-slow"></div>

    <div class="max-w-md w-full space-y-8 relative z-10">
        <div class="animate-fade-in">
            <div class="flex justify-center">
                <div class="inline-block">
                    <span class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary-50 text-primary-600 text-sm font-medium">
                        <span class="relative flex h-2 w-2">
                            <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-primary-400 opacity-75"></span>
                            <span class="relative inline-flex rounded-full h-2 w-2 bg-primary-500"></span>
                        </span>
                        Password Recovery
                    </span>
                </div>
            </div>
            <h2 class="mt-6 text-center text-4xl font-bold text-gray-700 tracking-tight">
                Forgot your password?
            </h2>
            <p class="mt-4 text-center text-gray-500">
                Enter your email address and we'll send you a link to reset your password.
            </p>
        </div>

        <form class="mt-8 space-y-6 animate-slide-up" [formGroup]="forgotPasswordForm" (ngSubmit)="onSubmit()">
            <div class="space-y-4">
                <div>
                    <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email address</label>
                    <input id="email" type="email" formControlName="email" required
                        class="appearance-none relative block w-full px-4 py-3 border border-gray-300 rounded-xl 
                               placeholder-gray-400 text-gray-900 focus:outline-none focus:ring-2 focus:ring-primary-500 
                               focus:border-primary-500 transition-all duration-200 sm:text-sm"
                        placeholder="Enter your email">
                </div>
            </div>

            <div class="flex flex-col space-y-4">
                <button type="submit" [disabled]="forgotPasswordForm.invalid || isLoading"
                    class="group relative w-full flex justify-center py-4 px-8 border border-transparent text-base font-medium 
                           rounded-xl text-white bg-primary-500 hover:bg-primary-600 focus:outline-none focus:ring-2 
                           focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 transform hover:-translate-y-1 
                           transition-all duration-200 shadow-soft hover:shadow-hover">
                    <span class="flex items-center gap-2">
                        {{ isLoading ? 'Sending reset link...' : 'Send reset link' }}
                        <i class="fas fa-arrow-right transform group-hover:translate-x-1 transition-transform"></i>
                    </span>
                </button>

                <button type="button" routerLink="/auth/login"
                    class="group w-full flex justify-center py-4 px-8 border-2 border-gray-200 text-base font-medium 
                           rounded-xl text-gray-600 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 
                           focus:ring-offset-2 focus:ring-gray-200 transform hover:-translate-y-1 
                           transition-all duration-200">
                    <span class="flex items-center gap-2">
                        Back to login
                        <i class="fas fa-arrow-left transform group-hover:-translate-x-1 transition-transform"></i>
                    </span>
                </button>
            </div>

            <div *ngIf="error" class="animate-shake p-4 rounded-xl bg-red-50 border border-red-100">
                <p class="text-center text-sm text-red-600 font-medium">
                    {{ error }}
                </p>
            </div>

            <div *ngIf="success" class="animate-fade-in p-4 rounded-xl bg-green-50 border border-green-100">
                <p class="text-center text-sm text-green-600 font-medium">
                    {{ success }}
                </p>
            </div>
        </form>
    </div>
</section>

================
File: src/app/features/auth/components/forgot-password/forgot-password.component.ts
================
import { Component } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { Router } from '@angular/router';
import { AuthService } from '../../../../core/services/auth.service';

@Component({
    selector: 'app-forgot-password',
    templateUrl: './forgot-password.component.html',
    // styleUrls: ['./forgot-password.component.scss']
})
export class ForgotPasswordComponent {
    forgotPasswordForm: FormGroup;
    isLoading = false;
    error: string | null = null;
    success: string | null = null;

    constructor(
        private formBuilder: FormBuilder,
        private authService: AuthService,
        private router: Router
    ) {
        this.forgotPasswordForm = this.formBuilder.group({
            email: ['', [Validators.required, Validators.email]]
        });
    }

    onSubmit(): void {
        if (this.forgotPasswordForm.invalid) {
            return;
        }

        this.isLoading = true;
        this.error = null;
        this.success = null;

        this.authService.forgotPassword(this.forgotPasswordForm.get('email')?.value)
            .subscribe({
                next: () => {
                    this.success = 'Password reset instructions have been sent to your email.';
                    this.isLoading = false;
                },
                error: (error) => {
                    this.error = error.error || 'An error occurred while processing your request';
                    this.isLoading = false;
                }
            });
    }
}

================
File: src/app/features/auth/components/login/login.component.html
================
<section class="relative overflow-hidden min-h-screen flex items-center justify-center bg-gradient-to-b from-gray-50 to-white py-12 px-4 sm:px-6 lg:px-8">
    <!-- Background Pattern -->
    <div class="absolute inset-0 bg-grid-pattern opacity-5 animate-pulse-slow"></div>

    <div class="max-w-md w-full space-y-8 relative z-10">
        <div class="animate-fade-in">
            <div class="flex justify-center">
                <div class="inline-block">
                    <span class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary-50 text-primary-600 text-sm font-medium">
                        <span class="relative flex h-2 w-2">
                            <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-primary-400 opacity-75"></span>
                            <span class="relative inline-flex rounded-full h-2 w-2 bg-primary-500"></span>
                        </span>
                        Welcome Back!
                    </span>
                </div>
            </div>
            <h2 class="mt-6 text-center text-4xl font-bold text-gray-700 tracking-tight">
                Sign in to your account
            </h2>
            <p class="mt-4 text-center text-gray-500">
                Or
                <a routerLink="/auth/register" class="font-medium text-primary-500 hover:text-primary-600 transition-colors">
                    create a new account
                </a>
            </p>
        </div>

        <form class="mt-8 space-y-6 animate-slide-up" [formGroup]="loginForm" (ngSubmit)="onSubmit()">
            <div class="space-y-4">
                <div>
                    <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email address</label>
                    <input id="email" type="email" formControlName="email" required
                        class="appearance-none relative block w-full px-4 py-3 border border-gray-300 rounded-xl 
                               placeholder-gray-400 text-gray-900 focus:outline-none focus:ring-2 focus:ring-primary-500 
                               focus:border-primary-500 transition-all duration-200 sm:text-sm"
                        placeholder="Enter your email">
                </div>
                <div>
                    <label for="password" class="block text-sm font-medium text-gray-700 mb-1">Password</label>
                    <input id="password" type="password" formControlName="password" required
                        class="appearance-none relative block w-full px-4 py-3 border border-gray-300 rounded-xl 
                               placeholder-gray-400 text-gray-900 focus:outline-none focus:ring-2 focus:ring-primary-500 
                               focus:border-primary-500 transition-all duration-200 sm:text-sm"
                        placeholder="Enter your password">
                </div>
            </div>

            <div class="flex items-center justify-end">
                <div class="text-sm">
                    <a routerLink="/auth/forgot-password" 
                       class="font-medium text-primary-500 hover:text-primary-600 transition-colors">
                        Forgot your password?
                    </a>
                </div>
            </div>

            <div>
                <button type="submit" [disabled]="loginForm.invalid || isLoading"
                    class="group relative w-full flex justify-center py-4 px-8 border border-transparent text-base font-medium 
                           rounded-xl text-white bg-primary-500 hover:bg-primary-600 focus:outline-none focus:ring-2 
                           focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 transform hover:-translate-y-1 
                           transition-all duration-200 shadow-soft hover:shadow-hover">
                    <span class="absolute left-0 inset-y-0 flex items-center pl-3">
                        <svg class="h-5 w-5 text-primary-300 group-hover:text-primary-400 transition-colors" 
                             xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd"
                                d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z"
                                clip-rule="evenodd" />
                        </svg>
                    </span>
                    <span class="flex items-center gap-2">
                        {{ isLoading ? 'Signing in...' : 'Sign in' }}
                        <i class="fas fa-arrow-right transform group-hover:translate-x-1 transition-transform"></i>
                    </span>
                </button>
            </div>

            <div *ngIf="error" class="animate-shake p-4 rounded-xl bg-red-50 border border-red-100">
                <p class="text-center text-sm text-red-600 font-medium">
                    {{ error }}
                </p>
            </div>
        </form>
    </div>
</section>

================
File: src/app/features/auth/components/login/login.component.ts
================
import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { Router } from '@angular/router';
import { AuthService } from '../../../../core/services/auth.service';

@Component({
    selector: 'app-login',
    templateUrl: './login.component.html',
    // styleUrls: ['./login.component.scss']
})
export class LoginComponent implements OnInit {
    loginForm: FormGroup;
    isLoading = false;
    error: string | null = null;

    constructor(
        private formBuilder: FormBuilder,
        private authService: AuthService,
        private router: Router
    ) {
        this.loginForm = this.formBuilder.group({
            email: ['', [Validators.required, Validators.email]],
            password: ['', [Validators.required, Validators.minLength(8)]]
        });
    }

    ngOnInit(): void {
        if (this.authService.isLoggedIn()) {
            this.router.navigate(['/dashboard']);
        }
    }

    onSubmit(): void {
        if (this.loginForm.invalid) {
            return;
        }

        this.isLoading = true;
        this.error = null;

        this.authService.login(this.loginForm.value)
            .subscribe({
                next: () => {
                    this.router.navigate(['/dashboard']);
                },
                error: (error) => {
                    this.error = error.error || 'An error occurred during login';
                    this.isLoading = false;
                }
            });
    }
}

================
File: src/app/features/auth/components/register/register.component.html
================
<section class="relative overflow-hidden min-h-screen flex items-center justify-center bg-gradient-to-b from-gray-50 to-white py-12 px-4 sm:px-6 lg:px-8">
    <!-- Background Pattern -->
    <div class="absolute inset-0 bg-grid-pattern opacity-5 animate-pulse-slow"></div>

    <div class="max-w-md w-full space-y-8 relative z-10">
        <div class="animate-fade-in">
            <div class="flex justify-center">
                <div class="inline-block">
                    <span class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary-50 text-primary-600 text-sm font-medium">
                        <span class="relative flex h-2 w-2">
                            <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-primary-400 opacity-75"></span>
                            <span class="relative inline-flex rounded-full h-2 w-2 bg-primary-500"></span>
                        </span>
                        Start Your Journey
                    </span>
                </div>
            </div>
            <h2 class="mt-6 text-center text-4xl font-bold text-gray-700 tracking-tight">
                Create your account
            </h2>
            <p class="mt-4 text-center text-gray-500">
                Already have an account?
                <a routerLink="/auth/login" class="font-medium text-primary-500 hover:text-primary-600 transition-colors">
                    Sign in
                </a>
            </p>
        </div>

        <form class="mt-8 space-y-6 animate-slide-up" [formGroup]="registerForm" (ngSubmit)="onSubmit()">
            <div class="space-y-4">
                <div>
                    <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Full Name</label>
                    <input id="name" type="text" formControlName="name" required
                        class="appearance-none relative block w-full px-4 py-3 border border-gray-300 rounded-xl 
                               placeholder-gray-400 text-gray-900 focus:outline-none focus:ring-2 focus:ring-primary-500 
                               focus:border-primary-500 transition-all duration-200 sm:text-sm"
                        placeholder="Enter your full name">
                </div>
                <div>
                    <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email address</label>
                    <input id="email" type="email" formControlName="email" required
                        class="appearance-none relative block w-full px-4 py-3 border border-gray-300 rounded-xl 
                               placeholder-gray-400 text-gray-900 focus:outline-none focus:ring-2 focus:ring-primary-500 
                               focus:border-primary-500 transition-all duration-200 sm:text-sm"
                        placeholder="Enter your email">
                </div>
                <div>
                    <label for="password" class="block text-sm font-medium text-gray-700 mb-1">Password</label>
                    <input id="password" type="password" formControlName="password" required
                        class="appearance-none relative block w-full px-4 py-3 border border-gray-300 rounded-xl 
                               placeholder-gray-400 text-gray-900 focus:outline-none focus:ring-2 focus:ring-primary-500 
                               focus:border-primary-500 transition-all duration-200 sm:text-sm"
                        placeholder="Create a password">
                </div>
            </div>

            <div class="flex items-center">
                <input id="terms" type="checkbox" formControlName="terms" required
                    class="h-4 w-4 text-primary-500 focus:ring-primary-500 border-gray-300 rounded cursor-pointer">
                <label for="terms" class="ml-2 block text-sm text-gray-700">
                    I agree to the
                    <a href="#" class="font-medium text-primary-500 hover:text-primary-600 transition-colors">Terms of Service</a>
                    and
                    <a href="#" class="font-medium text-primary-500 hover:text-primary-600 transition-colors">Privacy Policy</a>
                </label>
            </div>

            <div>
                <button type="submit" [disabled]="registerForm.invalid || isLoading"
                    class="group relative w-full flex justify-center py-4 px-8 border border-transparent text-base font-medium 
                           rounded-xl text-white bg-primary-500 hover:bg-primary-600 focus:outline-none focus:ring-2 
                           focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 transform hover:-translate-y-1 
                           transition-all duration-200 shadow-soft hover:shadow-hover">
                    <span class="flex items-center gap-2">
                        {{ isLoading ? 'Creating account...' : 'Create account' }}
                        <i class="fas fa-arrow-right transform group-hover:translate-x-1 transition-transform"></i>
                    </span>
                </button>
            </div>

            <div *ngIf="error" class="animate-shake p-4 rounded-xl bg-red-50 border border-red-100">
                <p class="text-center text-sm text-red-600 font-medium">
                    {{ error }}
                </p>
            </div>
        </form>
    </div>
</section>

================
File: src/app/features/auth/components/register/register.component.ts
================
import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { Router } from '@angular/router';
import { AuthService } from '../../../../core/services/auth.service';

@Component({
    selector: 'app-register',
    templateUrl: './register.component.html',
    // styleUrls: ['./register.component.scss']
})
export class RegisterComponent implements OnInit {
    registerForm: FormGroup;
    isLoading = false;
    error: string | null = null;

    constructor(
        private formBuilder: FormBuilder,
        private authService: AuthService,
        private router: Router
    ) {
        this.registerForm = this.formBuilder.group({
            firstName: ['', [Validators.required]],
            lastName: ['', [Validators.required]],
            email: ['', [Validators.required, Validators.email]],
            password: ['', [Validators.required, Validators.minLength(8)]]
        });
    }

    ngOnInit(): void {
        if (this.authService.isLoggedIn()) {
            this.router.navigate(['/dashboard']);
        }
    }

    onSubmit(): void {
        if (this.registerForm.invalid) {
            return;
        }

        this.isLoading = true;
        this.error = null;

        this.authService.register(this.registerForm.value)
            .subscribe({
                next: () => {
                    this.router.navigate(['/auth/verify-email'], {
                        queryParams: { email: this.registerForm.get('email')?.value }
                    });
                },
                error: (error) => {
                    this.error = error.error || 'An error occurred during registration';
                    this.isLoading = false;
                }
            });
    }
}

================
File: src/app/features/auth/components/reset-password/reset-password.component.html
================
<section class="relative overflow-hidden min-h-screen flex items-center justify-center bg-gradient-to-b from-gray-50 to-white py-12 px-4 sm:px-6 lg:px-8">
    <!-- Background Pattern -->
    <div class="absolute inset-0 bg-grid-pattern opacity-5 animate-pulse-slow"></div>

    <div class="max-w-md w-full space-y-8 relative z-10">
        <div class="animate-fade-in">
            <div class="flex justify-center">
                <div class="inline-block">
                    <span class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary-50 text-primary-600 text-sm font-medium">
                        <span class="relative flex h-2 w-2">
                            <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-primary-400 opacity-75"></span>
                            <span class="relative inline-flex rounded-full h-2 w-2 bg-primary-500"></span>
                        </span>
                        Set New Password
                    </span>
                </div>
            </div>
            <h2 class="mt-6 text-center text-4xl font-bold text-gray-700 tracking-tight">
                Reset your password
            </h2>
            <p class="mt-4 text-center text-gray-500">
                Please enter your new password below.
            </p>
        </div>

        <form class="mt-8 space-y-6 animate-slide-up" [formGroup]="resetPasswordForm" (ngSubmit)="onSubmit()">
            <div class="space-y-4">
                <div>
                    <label for="password" class="block text-sm font-medium text-gray-700 mb-1">New Password</label>
                    <input id="password" type="password" formControlName="password" required
                        class="appearance-none relative block w-full px-4 py-3 border border-gray-300 rounded-xl 
                               placeholder-gray-400 text-gray-900 focus:outline-none focus:ring-2 focus:ring-primary-500 
                               focus:border-primary-500 transition-all duration-200 sm:text-sm"
                        placeholder="Enter your new password">
                </div>
                <div>
                    <label for="confirmPassword" class="block text-sm font-medium text-gray-700 mb-1">Confirm Password</label>
                    <input id="confirmPassword" type="password" formControlName="confirmPassword" required
                        class="appearance-none relative block w-full px-4 py-3 border border-gray-300 rounded-xl 
                               placeholder-gray-400 text-gray-900 focus:outline-none focus:ring-2 focus:ring-primary-500 
                               focus:border-primary-500 transition-all duration-200 sm:text-sm"
                        placeholder="Confirm your new password">
                </div>
            </div>

            <div class="flex flex-col space-y-4">
                <button type="submit" [disabled]="resetPasswordForm.invalid || isLoading"
                    class="group relative w-full flex justify-center py-4 px-8 border border-transparent text-base font-medium 
                           rounded-xl text-white bg-primary-500 hover:bg-primary-600 focus:outline-none focus:ring-2 
                           focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 transform hover:-translate-y-1 
                           transition-all duration-200 shadow-soft hover:shadow-hover">
                    <span class="flex items-center gap-2">
                        {{ isLoading ? 'Resetting password...' : 'Reset password' }}
                        <i class="fas fa-arrow-right transform group-hover:translate-x-1 transition-transform"></i>
                    </span>
                </button>

                <button type="button" routerLink="/auth/login"
                    class="group w-full flex justify-center py-4 px-8 border-2 border-gray-200 text-base font-medium 
                           rounded-xl text-gray-600 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 
                           focus:ring-offset-2 focus:ring-gray-200 transform hover:-translate-y-1 
                           transition-all duration-200">
                    <span class="flex items-center gap-2">
                        Back to login
                        <i class="fas fa-arrow-left transform group-hover:-translate-x-1 transition-transform"></i>
                    </span>
                </button>
            </div>

            <div *ngIf="error" class="animate-shake p-4 rounded-xl bg-red-50 border border-red-100">
                <p class="text-center text-sm text-red-600 font-medium">
                    {{ error }}
                </p>
            </div>

            <div *ngIf="success" class="animate-fade-in p-4 rounded-xl bg-green-50 border border-green-100">
                <p class="text-center text-sm text-green-600 font-medium">
                    {{ success }}
                </p>
            </div>
        </form>
    </div>
</section>

================
File: src/app/features/auth/components/reset-password/reset-password.component.ts
================
import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { AuthService } from '../../../../core/services/auth.service';

@Component({
    selector: 'app-reset-password',
    templateUrl: './reset-password.component.html',
    // styleUrls: ['./reset-password.component.scss']
})
export class ResetPasswordComponent implements OnInit {
    resetPasswordForm: FormGroup;
    isLoading = false;
    error: string | null = null;
    success: string | null = null;
    token: string | null = null;

    constructor(
        private formBuilder: FormBuilder,
        private authService: AuthService,
        private route: ActivatedRoute,
        private router: Router
    ) {
        this.resetPasswordForm = this.formBuilder.group({
            password: ['', [Validators.required, Validators.minLength(8)]],
            confirmPassword: ['', [Validators.required]]
        }, { validator: this.passwordMatchValidator });
    }

    ngOnInit(): void {
        this.token = this.route.snapshot.queryParamMap.get('token');
        if (!this.token) {
            this.error = 'Invalid password reset token';
        }
    }

    passwordMatchValidator(g: FormGroup) {
        return g.get('password')?.value === g.get('confirmPassword')?.value
            ? null
            : { mismatch: true };
    }

    onSubmit(): void {
        if (this.resetPasswordForm.invalid || !this.token) {
            return;
        }

        this.isLoading = true;
        this.error = null;
        this.success = null;

        this.authService.resetPassword(this.token, this.resetPasswordForm.get('password')?.value)
            .subscribe({
                next: () => {
                    this.success = 'Your password has been reset successfully.';
                    this.isLoading = false;
                    setTimeout(() => {
                        this.router.navigate(['/auth/login']);
                    }, 3000);
                },
                error: (error) => {
                    this.error = error.error || 'An error occurred while resetting your password';
                    this.isLoading = false;
                }
            });
    }
}

================
File: src/app/features/auth/components/verify-email/verify-email.component.html
================
<section class="relative overflow-hidden min-h-screen flex items-center justify-center bg-gradient-to-b from-gray-50 to-white py-12 px-4 sm:px-6 lg:px-8">
    <!-- Background Pattern -->
    <div class="absolute inset-0 bg-grid-pattern opacity-5 animate-pulse-slow"></div>

    <div class="max-w-md w-full space-y-8 relative z-10">
        <div class="animate-fade-in">
            <div class="flex justify-center">
                <div class="inline-block">
                    <span class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary-50 text-primary-600 text-sm font-medium">
                        <span class="relative flex h-2 w-2">
                            <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-primary-400 opacity-75"></span>
                            <span class="relative inline-flex rounded-full h-2 w-2 bg-primary-500"></span>
                        </span>
                        Email Verification
                    </span>
                </div>
            </div>
            <h2 class="mt-6 text-center text-4xl font-bold text-gray-700 tracking-tight">
                Verify your email
            </h2>
            <p class="mt-4 text-center text-gray-500">
                Please check your email for the verification link.
            </p>
        </div>

        <div class="mt-8 space-y-6 animate-slide-up">
            <div class="bg-white p-6 rounded-xl shadow-soft space-y-4">
                <div class="flex items-center justify-center">
                    <div class="rounded-full bg-primary-50 p-3">
                        <i class="fas fa-envelope text-2xl text-primary-500"></i>
                    </div>
                </div>
                
                <div class="text-center space-y-2">
                    <p class="text-gray-600">
                        We've sent a verification link to:
                    </p>
                    <p class="font-medium text-gray-800">
                        {{ email }}
                    </p>
                </div>

                <div class="text-center text-sm text-gray-500">
                    <p>Didn't receive the email? Check your spam folder or</p>
                    <button (click)="resendVerification()" [disabled]="isLoading"
                        class="font-medium text-primary-500 hover:text-primary-600 transition-colors focus:outline-none">
                        click here to resend
                    </button>
                </div>
            </div>

            <div class="flex flex-col space-y-4">
                <button type="button" routerLink="/auth/login"
                    class="group w-full flex justify-center py-4 px-8 border-2 border-gray-200 text-base font-medium 
                           rounded-xl text-gray-600 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 
                           focus:ring-offset-2 focus:ring-gray-200 transform hover:-translate-y-1 
                           transition-all duration-200">
                    <span class="flex items-center gap-2">
                        Back to login
                        <i class="fas fa-arrow-left transform group-hover:-translate-x-1 transition-transform"></i>
                    </span>
                </button>
            </div>

            <div *ngIf="error" class="animate-shake p-4 rounded-xl bg-red-50 border border-red-100">
                <p class="text-center text-sm text-red-600 font-medium">
                    {{ error }}
                </p>
            </div>

            <div *ngIf="success" class="animate-fade-in p-4 rounded-xl bg-green-50 border border-green-100">
                <p class="text-center text-sm text-green-600 font-medium">
                    {{ success }}
                </p>
            </div>
        </div>
    </div>
</section>

================
File: src/app/features/auth/components/verify-email/verify-email.component.ts
================
import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { AuthService } from '../../../../core/services/auth.service';

@Component({
    selector: 'app-verify-email',
    templateUrl: './verify-email.component.html',
    // styleUrls: ['./verify-email.component.scss']
})
export class VerifyEmailComponent implements OnInit {
    isLoading = false;
    error: string | null = null;
    success: string | null = null;
    email: string | null = null;
    token: string | null = null;

    constructor(
        private authService: AuthService,
        private route: ActivatedRoute,
        private router: Router
    ) {}

    ngOnInit(): void {
        this.token = this.route.snapshot.queryParamMap.get('token');
        this.email = this.route.snapshot.queryParamMap.get('email');

        if (this.token) {
            this.verifyEmail();
        }
    }

    verifyEmail(): void {
        if (!this.token) {
            return;
        }

        this.isLoading = true;
        this.error = null;
        this.success = null;

        this.authService.verifyEmail(this.token)
            .subscribe({
                next: () => {
                    this.success = 'Email verified successfully. You can now log in.';
                    this.isLoading = false;
                    setTimeout(() => {
                        this.router.navigate(['/auth/login']);
                    }, 3000);
                },
                error: (error) => {
                    this.error = error.error || 'An error occurred while verifying your email';
                    this.isLoading = false;
                }
            });
    }

    resendVerification(): void {
        if (!this.email) {
            return;
        }

        this.isLoading = true;
        this.error = null;
        this.success = null;

        this.authService.resendVerificationEmail(this.email)
            .subscribe({
                next: () => {
                    this.success = 'Verification email has been resent. Please check your inbox.';
                    this.isLoading = false;
                },
                error: (error) => {
                    this.error = error.error || 'An error occurred while resending verification email';
                    this.isLoading = false;
                }
            });
    }
}

================
File: src/app/models/company.ts
================
export type Company = {
  name: string;
  src: string;
};

================
File: src/app/pages/dashboard/dashboard.component.html
================
<p>dashboard works!</p>

================
File: src/app/pages/dashboard/dashboard.component.spec.ts
================
import { ComponentFixture, TestBed } from '@angular/core/testing';

import { DashboardComponent } from './dashboard.component';

describe('DashboardComponent', () => {
  let component: DashboardComponent;
  let fixture: ComponentFixture<DashboardComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [DashboardComponent]
    })
    .compileComponents();
    
    fixture = TestBed.createComponent(DashboardComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

================
File: src/app/pages/dashboard/dashboard.component.ts
================
import { Component } from '@angular/core';

@Component({
  selector: 'app-dashboard',

  templateUrl: './dashboard.component.html',
  styleUrl: './dashboard.component.sass',
})
export class DashboardComponent {}

================
File: src/app/pages/home/home.component.html
================
<app-navbar />
<main class="container mx-auto">
  <section-hero />
  <section-features />
  <section-pricing />
  <!-- CTA Section -->
  <section class="container mx-auto px-4 sm:px-6 lg:px-8 py-16">
    <div class="bg-gradient-to-r from-primary-600 to-primary-700 rounded-2xl overflow-hidden">
      <div class="relative px-6 py-16 sm:px-12 sm:py-20">
        <!-- Background Pattern -->
        <div class="absolute inset-0 bg-grid-pattern opacity-10"></div>
        
        <!-- Content -->
        <div class="relative max-w-3xl mx-auto text-center">
          <!-- Heading -->
          <h2 class="text-3xl sm:text-4xl font-bold text-white mb-6">
            Ready to Start Your Journey?
          </h2>
          
          <!-- Description -->
          <p class="text-lg text-white/90 mb-10">
            Join our community of developers and start building amazing applications today.
          </p>
          
          <!-- Action Buttons -->
          <div class="flex flex-col sm:flex-row justify-center gap-4">
            <button class="px-8 py-3 bg-white text-primary-600 rounded-xl font-medium 
                         hover:bg-gray-50 transition-all duration-200
                         focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-primary-600">
              Get Started Free
            </button>
            <button class="px-8 py-3 bg-primary-500 text-white rounded-xl font-medium 
                         hover:bg-primary-400 transition-all duration-200
                         focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-primary-600">
              Contact Sales
            </button>
          </div>
        </div>
      </div>
    </div>
  </section>
</main>
<app-footer />

================
File: src/app/pages/home/home.component.spec.ts
================
import { ComponentFixture, TestBed } from '@angular/core/testing';

import { HomeComponent } from './home.component';

describe('HomeComponent', () => {
  let component: HomeComponent;
  let fixture: ComponentFixture<HomeComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [HomeComponent]
    })
    .compileComponents();
    
    fixture = TestBed.createComponent(HomeComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

================
File: src/app/pages/home/home.component.ts
================
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';

// Components
import { NavbarComponent } from '../../components/home/navbar/navbar.component';
import { HeroComponent } from '../../components/home/hero/hero.component';
import { FeaturesComponent } from '../../components/home/features/features.component';
import { PricingComponent } from '../../components/home/pricing/pricing.component';
import { FooterComponent } from '../../components/home/footer/footer.component';

interface TrustCompany {
  name: string;
  logo: string;
}

@Component({
  selector: 'app-home',
  standalone: true,
  imports: [
    CommonModule,
    NavbarComponent,
    HeroComponent,
    FeaturesComponent,
    PricingComponent,
    FooterComponent,
  ],
  templateUrl: './home.component.html',
  styleUrl: './home.component.sass',
})
export class HomeComponent {
  trustCompanies: TrustCompany[] = [
    {
      name: 'Microsoft',
      logo: '../../../../assets/logos/microsoft.svg'
    },
    {
      name: 'Google',
      logo: '../../../../assets/logos/google.svg'
    },
    {
      name: 'Amazon',
      logo: '../../../../assets/logos/amazon.svg'
    },
    {
      name: 'Apple',
      logo: '../../../../assets/logos/apple.svg'
    }
  ];
}

================
File: src/app/pages/login/login.component.html
================
<p>login works!</p>

================
File: src/app/pages/login/login.component.spec.ts
================
import { ComponentFixture, TestBed } from '@angular/core/testing';

import { LoginComponent } from './login.component';

describe('LoginComponent', () => {
  let component: LoginComponent;
  let fixture: ComponentFixture<LoginComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [LoginComponent]
    })
    .compileComponents();
    
    fixture = TestBed.createComponent(LoginComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

================
File: src/app/pages/login/login.component.ts
================
import { Component } from '@angular/core';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrl: './login.component.sass',
})
export class LoginComponent {}

================
File: src/assets/logos/coca-cola.svg
================
<svg width="147" height="48" viewBox="0 0 147 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="m122.82 40.93-.45.4c-.65.58-1.31 1.2-2.12.89-.22-.08-.37-.38-.41-.6-.04-1.65.7-3.18 1.43-4.67l.19-.39c2.07-3.46 4.49-7.54 8.04-10.36.6-.43 1.24-.8 1.93-.51.15.14.34.4.34.65 0 .08-.07.3-.12.36-.99 1.6-1.93 3.28-2.85 4.89-1.79 3.17-3.65 6.46-5.98 9.34Zm-19.22-8.15c-.13.1-2.53-.71-3-2.92-.38-1.9.93-3.4 2.2-4.15a2.2 2.2 0 0 1 1.98-.36c.56.38.7 1.05.7 1.77 0 .44-.05.9-.1 1.31l-.01.1a17.83 17.83 0 0 1-1.77 4.25Zm-9.15 9a2.1 2.1 0 0 1-.33-1.19c-.05-2.63 2.79-7.34 4.79-9.9.84 1.83 2.74 3 3.9 3.5-1.43 3.17-6.32 9.95-8.36 7.59Zm34.59.46c-.48.33-1.14.08-.9-.66.62-1.88 3.1-5.7 3.1-5.7l6.86-12.16h-4.7c-.23.37-.7 1.21-.7 1.21a6.45 6.45 0 0 0-1.14-1.34c-1.15-.72-2.84-.38-4 .28-5.06 2.95-8.76 8.78-11.67 13.32 0 0-3.06 5.06-4.76 5.43-1.33.11-1.2-1.67-1.14-2.09.51-3 1.7-5.86 2.9-8.45a65.05 65.05 0 0 0 7.78-6.33c5.5-5.24 10.14-11.18 10.81-12.51 0 0-.73.15-1.6.17-4.23 5.9-12.89 14.45-15.51 15.72 1.16-2.79 8.67-16.1 15.07-22.47l1-.97c1.56-1.52 3.17-3.07 4.43-3.33.13 0 .3 0 .45.31.06 1.18-.38 2.06-.89 3.05l-.7 1.45s1-.2 1.66-.4c.76-1.44 1.6-3.05 1.3-4.97a1.43 1.43 0 0 0-1.14-1.2c-1.91-.35-3.99 1.05-5.66 2.2l-.07.03c-8.6 6.72-15.86 16.4-22.21 29.63-.46.35-2.24.76-2.54.56a21.48 21.48 0 0 0 1.81-4.9c.07-.53.13-1.08.13-1.62 0-1.15-.28-2.24-1.31-2.99-1.22-.6-2.72-.32-3.73.14-4.54 1.87-7.93 6.51-10.38 10.34-1.32 2.42-2.63 5.02-3 8-.25 2.33.27 3.84 1.6 4.59 1.37.7 3.1-.03 3.77-.38 4.6-2.41 7.8-7.25 10.34-11.68.1-.01 1.48-.05 2.53-.32l.04.01-.6 1.81c-1.6 4.7-2.34 7.89-.83 9.78 2.17 2.67 5.75-.1 8.67-3.74-.63 4.37 1.65 5.05 3.38 4.72 1.99-.54 4.2-2.66 5.23-3.74-.33 1.27-.24 3.55 1.57 3.78 1.24.23 2.17-.44 3.25-1.02 3.85-2.1 8.46-9.07 9.66-11.08h-1.57c-1.7 2.56-3.87 5.93-6.6 7.53ZM69.68 16.21h4.4l2.5-4.03h-4.42l-2.48 4.03Zm70.44-10.7c-3.36 1.9-6.85 3.13-11.07 2.7a64.6 64.6 0 0 0-3.36 4.06c5.93 1.5 12.2-1.83 15.7-5.01C145.1 4.06 147 .02 147 .02s-2.78 3.16-6.88 5.48Zm-37.08-1.03c-.7 8.02-6.95 12.73-8.5 13.1-.94.2-2.54-.22-1.1-3.59 2.1-4.53 5.68-8.38 9.53-10.35.1.33.1.55.07.84ZM90.86 24.7a2.74 2.74 0 0 0-2.65-1.51c-3.68.33-7.27 3.35-9.16 7.68-1 2.23-1.54 4.06-1.9 6.99a19.38 19.38 0 0 1 6.13-4.65s.36-2.8 2.2-5.3c.7-1.03 2.09-2.7 3.65-2.26 1.37.46.89 4.23-.93 7.88a25.3 25.3 0 0 1-5.47 7.21c-1.84 1.56-4.56 3.43-6.94 1.99-1.5-.89-2.26-2.74-2.1-5.13.72-6.77 3.8-12.54 8.23-19.1 4.56-6.1 9.6-12.37 16.36-15.71 1.39-.7 2.67-.86 3.77-.43 0 0-6.36 3.49-9.39 9.94-.77 1.63-1.84 3.85-.76 5.8.56 1.02 1.56 1.1 2.37 1.05 3.72-.86 6.12-4.32 8.08-7.48 1.14-2.4 2.15-4.79 2.15-7.45 0-.32-.02-.75-.05-1.07 1.78-.94 5.42.73 5.42.73 2.84.93 8.9 5.56 10.94 6.45 1-1.16 2.63-2.9 3.56-3.77l-1.34-.82c-2.14-1.3-4.4-2.53-6.62-3.75-5.05-2.75-9.16-1.79-11.25-1.04-.82.3-1.57.55-1.57.55C102.04-.2 99.49-.04 97.6.42c-6.74 1.93-13 6.64-19.72 14.8-4.94 6.4-8 11.93-9.63 17.38-1.26 3.68-1.64 9.08 1.43 12.29 2.6 2.72 6.07 2.13 8.52 1.15 5.3-2.6 10.05-8.2 12.43-14.66.57-1.91 1.2-4.62.22-6.69Zm-58.72-6.22c0 .03-.9 2.07-.9 2.07-.13.1-.33.05-.56 0l-.4-.07c-1.26-.39-2.2-1.22-2.5-2.21-.4-1.94 1.25-3.45 1.98-4 .7-.48 1.79-.74 2.42-.24.39.45.54 1.04.54 1.69 0 .87-.27 1.85-.58 2.76Zm-1.91 3.88-.06.16-2.03 3.28c-1.22 1.62-2.74 3.66-4.64 4.64-.56.19-1.34.31-1.74-.19-.84-1-.41-2.4-.06-3.52l.13-.4c1-2.74 2.61-5.15 4.17-7.4a.2.2 0 0 1 .08-.02l.02.04c.98 1.88 2.81 2.75 4.19 3.15l.01.04c0 .04-.02.1-.07.22Zm25.26-2.16c.9-1.25 3.54-4.59 4.18-5.15 2.16-1.9 3.02-1.06 3.1-.47-2.02 3.6-4.4 7.7-6.63 11.41l-.7 1.06c-.98 1.5-1.98 2.79-3.6 3.69-.23.06-.6.1-.86-.1a.91.91 0 0 1-.4-.88c.1-1.16 1.28-4.68 4.91-9.56ZM33.1 12.03c-2.78-1.82-8.39 1.67-12.87 7.65-4.1 5.36-5.88 11.6-3.95 14.48 2.87 3.4 8.2-1.54 10.46-4.18l.29-.31c1.54-1.65 2.73-3.64 3.88-5.54 0 0 1.06-1.74 1.1-1.83.66-.12 1.45-.3 2.34-.56-.01.04-3.4 5.71-3.05 8.53.1.86.02 4 3.1 4.95 4.09.68 7.36-2.48 10.24-5.3l.77-.73-.16.65c-1.2 4.16.42 5.03 1.43 5.35 3.05.89 6.7-3.54 6.72-3.54-.1 1.4-.38 2.55 1.1 3.48 1.39.5 2.8-.26 3.87-.98 3.85-2.7 6.96-6.94 9.46-10.6h-1.6c-.01 0-3.94 5.67-6.5 6.9 0 0-.46.24-.73.05-.33-.28-.2-.86 0-1.28l9.85-17.04h-4.64s-.5.82-.55.87c-.03-.02-.1-.16-.16-.23-2.87-3.97-9.4 2.13-14.3 9.21a46.55 46.55 0 0 1-6.78 8s-3.7 3.38-5.28.96c-.57-1.02-.4-2.51-.07-3.5 1.84-5.2 5-9.94 8.6-12.8 1.02-.8 2.13-1.02 2.68-.68.52.3.6 1.07.27 1.6a2.6 2.6 0 0 0-2.05.78c-1.08 1.13-1.45 2.22-1.11 3.23 1.66 2.36 4.98-2.3 4.82-5.15a3.05 3.05 0 0 0-1.42-2.45c-1.21-.72-3.06-.54-4.26.04-1.6.6-4.14 2.7-5.62 4.35-1.87 2.05-5.06 4.33-6.06 4.07.32-.87 3.02-6.38.18-8.45Zm23.35 29.84c-5.47-3.51-12.9-4.13-24.87-.82-12.76 3-17.02 4.91-22.6 1.06-2.15-1.89-2.92-4.93-2.35-9.32 1.34-7.15 4.94-14.02 11.34-21.65 3.57-3.97 6.88-7.38 11.26-8.75 3.35-.86 3.04 1.77 2.63 2.15-.42 0-1.14.07-1.7.43-.45.35-1.69 1.47-1.76 2.99-.1 2.32 2.32 1.83 3.35.56 1.12-1.43 2.78-4.18 1.48-6.74A3.82 3.82 0 0 0 30.57.02c-4-.23-7.74 1.67-11.18 3.78C11.86 9.02 5.84 16.24 2.43 24.16.46 28.93-1.32 35.77 1.35 41.34c2.06 3.86 6.34 5.9 11.44 5.48 3.58-.38 7.91-1.53 10.82-2.23 2.92-.7 17.82-5.8 22.72 3.09 0 0 1.62-3.15 5.7-3.22 3.34-.3 8.17.97 11.68 3.54-1.17-1.76-4.49-4.34-7.26-6.13Z" fill="#006AFF" fill-rule="nonzero" opacity="1"/>
</svg>

================
File: src/assets/logos/disney.svg
================
<svg width="106.98" height="44" viewBox="0 0 106.98 44" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M92.46 19.13c-1.81.42-6.59.65-6.59.65l-.59 1.87s2.37-.2 4.1-.03c0 0 .56-.04.62.62.03.67-.05 1.38-.05 1.38s-.04.42-.62.52c-.66.11-5.14.31-5.14.31l-.73 2.43s-.26.55.34.4c.56-.16 5.26-1.05 5.87-.92.65.15 1.4 1.04 1.18 1.84-.25.97-4.95 3.95-7.8 3.75 0 0-1.5.09-2.74-1.92-1.2-1.92.41-5.53.41-5.53s-.72-1.7-.18-2.3c0 0 .3-.27 1.24-.35l1.15-2.36s-1.3.07-2.08-.88c-.71-.92-.77-1.32-.22-1.57.59-.3 6.03-1.27 9.77-1.15 0 0 1.31-.15 2.47 2.1 0 0 .53.93-.4 1.14m-14.11 9.1c-.46 1.12-1.75 2.3-3.3 1.58-1.57-.74-4.06-5.77-4.06-5.77s-.92-1.88-1.11-1.82c0 0-.2-.37-.3 1.7-.16 2.04.02 6.02-.83 6.65-.77.61-1.7.35-2.22-.37-.44-.73-.62-2.46-.37-5.49.27-3.03.97-6.25 1.85-7.25.93-1.01 1.67-.28 1.95 0 0 0 1.19 1.08 3.2 4.26l.34.58s1.82 3.03 2 3.01c0 0 .16.15.28.03.19-.04.13-1.03.13-1.03s-.34-3.27-2.04-8.8c0 0-.25-.7-.08-1.38.15-.62.82-.31.82-.31s2.56 1.23 3.82 5.38c1.23 4.14.4 7.9-.06 9.03m-12.6-10.65c-.25.43-.36 1.03-1.42 1.2 0 0-10.36.72-10.87 1.45 0 0-.34.43.22.53.58.13 2.93.43 4.05.5 1.2 0 5.25.03 6.74 1.84 0 0 .85.86.81 2.81-.03 2-.38 2.7-1.17 3.43-.82.67-7.84 3.8-12.36-.99 0 0-2.08-2.3.72-4.05 0 0 2.01-1.23 7.16.2 0 0 1.54.55 1.48 1.12-.09.61-1.28 1.23-3.01 1.2-1.67-.05-2.9-.85-2.66-.71.23.08-1.8-.98-2.44-.26-.62.67-.47 1.07.15 1.49 1.55.89 7.62.57 9.43-1.45 0 0 .73-.81-.37-1.47-1.08-.61-4.24-1-5.46-1.05-1.16-.06-5.5 0-6.15-1.12 0 0-.62-.8.06-2.98.71-2.3 5.77-3.2 7.96-3.38 0 0 6.03-.24 7.16.99 0 0 .15.27-.03.69m-17.1 13.52c-.72.54-2.27.3-2.72-.3-.43-.55-.58-2.67-.5-6 .1-3.41.15-7.6.92-8.27.77-.66 1.24-.07 1.55.37.3.46.7.97.77 2.03.1 1.08.36 6.6.36 6.6s.34 5.05-.36 5.57m1.53-17.98c-2.13.72-3.59.5-4.82-.04-.54.96-.87 1.26-1.27 1.32-.62.06-1.16-.92-1.24-1.23-.12-.23-.41-.65-.06-1.58a3.57 3.57 0 0 1-1.08-3.5c.28-1.13 2.32-5.4 8.5-5.9 0 0 3.03-.22 3.56 1.38h.09s2.94 0 2.87 2.6c0 2.62-3.24 5.88-6.55 7m2.75-7.48c-1.95.3-4.94 2.88-6.38 5.02 2.2.4 6.07.25 7.8-3.23 0 0 .82-2.18-1.42-1.8m-8.55 1.7c-.61 1-.64 1.6-.35 2 .73-1.08 2-2.77 3.94-4.1a4.57 4.57 0 0 0-3.59 2.1M97.1 30.98a45.74 45.74 0 0 0-3.32 12.26s-.16 1.03-1 .7c-.86-.31-2.25-1.7-2.56-3.65-.3-2.55.84-6.85 3.17-11.8a6.78 6.78 0 0 1-.77-4.92s.62-4.14 4.8-7.9c0 0 .49-.4.76-.27.34.15.2 1.48-.07 2.15-.25.65-2.1 3.84-2.1 3.84s-1.16 2.18-.84 3.89c2.2-3.35 7.19-10.14 10.28-7.99 1.96 1.38 1.96 5.84.5 8.42-1.17 2.04-4.44 6.27-8.82 5.29m6.43-10.45a29.81 29.81 0 0 0-4.79 6.73 7.94 7.94 0 0 0 3.87-1.6c.81-.72 2.7-2.67 2.4-5.25 0 0-.18-1.36-1.48.12M34.31 32.79a25.36 25.36 0 0 1-13.45.16c-.07 1.13-.2 1.61-.38 1.8-.22.24-2.01 1.25-3-.19-.43-.7-.65-1.94-.77-3.07-6.34-2.86-9.28-7.07-9.37-7.22a2.53 2.53 0 0 1-.15-3.5c1.34-1.65 5.8-3.33 9.78-3.99.15-3.38.52-5.99 1-7.14.58-1.38 1.3-.15 1.95.77.53.69.85 3.65.88 6.02 2.6-.12 4.18.06 7.07.61 3.8.65 6.33 2.59 6.13 4.77a3.52 3.52 0 0 1-2.94 3.1c-.77.06-2-.5-2-.5-.87-.4-.08-.77.92-1.2 1.12-.54.87-1.08.87-1.08-.4-1.23-5.33-2.04-10.23-2.04 0 2.69.1 7.14.18 9.74 3.43.64 6 .5 6 .5s12.52-.35 12.87-8.3c.39-7.95-12.52-15.57-22.02-17.97-9.5-2.47-14.87-.72-15.33-.49-.51.25-.05.34-.05.34s.51.08 1.44.38c.93.31.18.77.18.77-1.62.55-3.43.23-3.78-.5-.36-.73.23-1.39.92-2.36.65-1 1.4-.96 1.4-.96C14.17-2.84 28.5 4.46 28.5 4.46c13.42 6.73 15.7 14.64 15.46 17.72-.22 3.02-1.39 8.14-9.66 10.63M8.5 21.8c-1.33.61-.4 1.6-.4 1.6a21.42 21.42 0 0 0 8.5 5.37c.34-4.6.3-6.25.3-8.57-4.54.3-7.16 1.04-8.4 1.6" fill="#006AFF" fill-rule="nonzero" opacity="1"/>
</svg>

================
File: src/assets/logos/nasa.svg
================
<svg width="103.27" height="29.01" viewBox="0 0 103.27 29.01" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M7.26 0c3.1 0 5.82 1.95 6.84 4.82l.06.2L19 22.3l.03.07c.22.46.66.78 1.18.83h.14a1.47 1.47 0 0 0 1.46-1.44V.73h5.8v21.03a7.25 7.25 0 0 1-14.1 2.43l-.06-.19L8.61 6.7l-.03-.06A1.45 1.45 0 0 0 7.4 5.8h-.14c-.8 0-1.46.64-1.46 1.44V28.3H0V7.25C0 3.25 3.25 0 7.26 0ZM40.7 0c3.07 0 5.81 1.93 6.86 4.9l5.71 17.58h14.7a2.54 2.54 0 0 0 2.54-2.53c0-1.4-1.14-2.54-2.55-2.54H60.7a8.35 8.35 0 1 1 0-16.68h14.18v5.8H60.69a2.55 2.55 0 0 0-2.56 2.54c0 1.4 1.15 2.54 2.56 2.54h7.27a8.35 8.35 0 1 1 0 16.68h-18.9L42.07 6.77c-.2-.58-.75-.97-1.37-.97-.61 0-1.16.39-1.34.89l-7.01 21.6h-6.1l7.62-23.47A7.26 7.26 0 0 1 40.7 0Zm48.1 0a7.29 7.29 0 0 1 6.86 4.9l7.6 23.38h-6.1L90.18 6.77c-.2-.58-.76-.97-1.38-.97-.62 0-1.17.4-1.35.9l-7.02 21.58h-6.1l7.63-23.46A7.26 7.26 0 0 1 88.79 0Z" fill="#006AFF" fill-rule="nonzero" opacity="1"/>
</svg>

================
File: src/assets/logos/nike.svg
================
<svg width="88.1" height="31.43" viewBox="0 0 88.1 31.43" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M9.72 31.42c-2.63-.1-4.77-.83-6.45-2.16a12.92 12.92 0 0 1-1.34-1.35A8.4 8.4 0 0 1 .47 25.3c-.95-2.85-.46-6.59 1.4-10.7 1.6-3.5 4.05-6.99 8.34-11.81L12.73 0l-.22.4a25.3 25.3 0 0 0-2.6 5.97c-.83 3.06-.73 5.68.3 7.72a7.53 7.53 0 0 0 3.3 3.29c2.4 1.17 5.9 1.27 10.18.28l32.47-8.63L88.1.53 26.11 27.1a81.82 81.82 0 0 1-5.83 2.35c-4.03 1.42-7.64 2.1-10.56 1.98Z" fill="#006AFF" fill-rule="nonzero" opacity="1"/>
</svg>

================
File: src/assets/logos/stripe.svg
================
<svg width="106" height="44" viewBox="0 0 106 44" xmlns="http://www.w3.org/2000/svg">
  <path d="M106 22.73c0-7.52-3.65-13.45-10.63-13.45-7 0-11.25 5.93-11.25 13.4 0 8.84 5 13.3 12.2 13.3 3.5 0 6.15-.8 8.15-1.9V28.2c-2 1-4.3 1.61-7.21 1.61-2.86 0-5.4-1-5.72-4.46h14.4c0-.38.06-1.91.06-2.62Zm-14.55-2.79c0-3.32 2.04-4.7 3.9-4.7 1.79 0 3.7 1.38 3.7 4.7h-7.6ZM72.75 9.28a8.33 8.33 0 0 0-5.76 2.3l-.39-1.83h-6.47V44l7.36-1.56.03-8.3a8.3 8.3 0 0 0 5.2 1.84c5.28 0 10.08-4.23 10.08-13.54-.03-8.52-4.89-13.16-10.04-13.16ZM71 29.52a4.4 4.4 0 0 1-3.47-1.38l-.03-10.9a4.39 4.39 0 0 1 3.5-1.44c2.68 0 4.54 3 4.54 6.85 0 3.93-1.83 6.87-4.54 6.87ZM57.4 5.96V0l-7.4 1.56v5.99l7.4-1.59Zm-7.4 3.82h7.4v25.7h-7.4Zm-7.91 2.17-.47-2.17h-6.36v25.7h7.36V18.06c1.73-2.26 4.68-1.85 5.6-1.52V9.78c-.95-.35-4.4-1-6.13 2.17ZM27.35 3.41l-7.18 1.52-.03 23.53a7.39 7.39 0 0 0 7.63 7.55c2.41 0 4.18-.44 5.15-.97v-5.96c-.94.38-5.6 1.73-5.6-2.62V16.04h5.6V9.78h-5.6l.03-6.37ZM7.45 17.24c0-1.14.94-1.58 2.5-1.58 2.24 0 5.07.67 7.3 1.88v-6.9a19.46 19.46 0 0 0-7.3-1.36C3.98 9.28 0 12.4 0 17.6c0 8.11 11.19 6.82 11.19 10.31 0 1.36-1.18 1.8-2.83 1.8-2.44 0-5.56-1-8.04-2.35v6.99A20.45 20.45 0 0 0 8.36 36c6.13 0 10.34-3.02 10.34-8.28-.03-8.76-11.25-7.2-11.25-10.49Z" fill="#006AFF" fill-rule="nonzero" opacity="1"/>
</svg>

================
File: src/environments/environment.prod.ts
================
export const environment = {
    production: true,
    apiUrl: 'https://your-production-api-url/api'
};

================
File: src/environments/environment.ts
================
export const environment = {
    production: false,
    apiUrl: 'http://localhost:8090/api/api'
};

================
File: src/index.html
================
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>angular-saas-starter | github.com/emirmorgan</title>
    <base href="/" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/x-icon" href="favicon.ico" />
  </head>
  <body>
    <app-root></app-root>
  </body>
</html>

================
File: src/main.server.ts
================
import { bootstrapApplication } from '@angular/platform-browser';
import { AppComponent } from './app/app.component';
import { config } from './app/app.config.server';

const bootstrap = () => bootstrapApplication(AppComponent, config);

export default bootstrap;

================
File: src/main.ts
================
import { bootstrapApplication } from '@angular/platform-browser';
import { appConfig } from './app/app.config';
import { AppComponent } from './app/app.component';

bootstrapApplication(AppComponent, appConfig)
  .catch((err) => console.error(err));

================
File: src/styles.sass
================
@tailwind base
@tailwind components
@tailwind utilities

@import url("@fortawesome/fontawesome-free/css/all.min.css")

@font-face
    font-family: "Montserrat"
    src: url("assets/Montserrat/regular-400.woff2") format("woff2")
    font-weight: 400
    font-style: normal
    font-display: optional

@font-face
    font-family: "Montserrat"
    src: url("assets/Montserrat/regular-500.woff2") format("woff2")
    font-weight: 500
    font-style: normal
    font-display: optional

@font-face
    font-family: "Montserrat"
    src: url("assets/Montserrat/regular-600.woff2") format("woff2")
    font-weight: 600
    font-style: normal
    font-display: optional

@font-face
    font-family: "Montserrat"
    src: url("assets/Montserrat/regular-700.woff2") format("woff2")
    font-weight: 700
    font-style: normal
    font-display: optional

$base-color: #F7F7F8
$primary-color: #006AFF
$secondary-color: #3287ff

html, body
    font-family: "Montserrat"
    background-color: $base-color
    position: relative
    overflow-x: clip
    scroll-behavior: smooth !important

@mixin BaseButton()
    display: inline-block
    height: max-content
    width: max-content

    padding: 6px 12px
    border-radius: 28px

    text-align: center
    font-weight: 500

    cursor: pointer
    transition: all 150ms ease-in
    &:hover
        background-color: $secondary-color

.m-button-solid
    @include BaseButton()
    background-color: $primary-color
    color: $base-color

.m-button-outline
    @include BaseButton()
    border: solid 1px
    border-color: $primary-color
    color: $primary-color
    &:hover
        background-color: $primary-color
        color: $base-color

.headline
    font-weight: bold
    font-size: 26px

    color: #77aefc
    background-image: -webkit-linear-gradient(45deg, #2e75d9 23%, #3788fa 44%, #6ca8fd 96%)
    background-clip: text
    -webkit-background-clip: text
    text-fill-color: transparent
    -webkit-text-fill-color: transparent

================
File: tailwind.config.js
================
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: ["./src/**/*.{html,ts}"],
  theme: {
    extend: {
      colors: {
        primary: {
          50: '#E6F0FF',
          100: '#CCE0FF',
          200: '#99C2FF',
          300: '#66A3FF',
          400: '#3385FF',
          500: '#006AFF',
          600: '#0055CC',
          700: '#004099',
          800: '#002A66',
          900: '#001533',
        },
        secondary: {
          50: '#F0F5FF',
          100: '#E6EDFF',
          200: '#CCD9FF',
          300: '#99B3FF',
          400: '#668CFF',
          500: '#3287ff',
          600: '#0047FF',
          700: '#0037CC',
          800: '#002699',
          900: '#001333',
        },
        gray: {
          50: '#F7F7F8',
          100: '#EEEEF0',
          200: '#E1E3E5',
          300: '#CACCCF',
          400: '#9EA2A8',
          500: '#71767E',
          600: '#4B4F55',
          700: '#343140',
          800: '#1E2024',
          900: '#0F1012',
        },
      },
      fontFamily: {
        sans: ['Montserrat', 'sans-serif'],
      },
      fontSize: {
        'display-1': ['4.5rem', { lineHeight: '1.1', letterSpacing: '-0.02em' }],
        'display-2': ['3.75rem', { lineHeight: '1.1', letterSpacing: '-0.02em' }],
        'display-3': ['3rem', { lineHeight: '1.2', letterSpacing: '-0.01em' }],
        'heading-1': ['2.5rem', { lineHeight: '1.2' }],
        'heading-2': ['2rem', { lineHeight: '1.3' }],
        'heading-3': ['1.75rem', { lineHeight: '1.3' }],
      },
      boxShadow: {
        'soft': '0 2px 15px -3px rgba(0, 0, 0, 0.07), 0 10px 20px -2px rgba(0, 0, 0, 0.04)',
        'hover': '0 10px 40px -3px rgba(0, 0, 0, 0.1), 0 20px 60px -2px rgba(0, 0, 0, 0.06)',
      },
      borderRadius: {
        'xl': '1rem',
        '2xl': '1.5rem',
      },
      transitionTimingFunction: {
        'smooth': 'cubic-bezier(0.4, 0, 0.2, 1)',
      },
      animation: {
        'fade-in': 'fadeIn 0.5s ease-out',
        'slide-up': 'slideUp 0.5s ease-out',
        'scale': 'scale 0.3s ease-out',
        'float': 'float 3s ease-in-out infinite',
        'pulse-slow': 'pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite',
        'bounce-slow': 'bounce 2s infinite',
      },
      keyframes: {
        fadeIn: {
          '0%': { opacity: '0' },
          '100%': { opacity: '1' },
        },
        slideUp: {
          '0%': { transform: 'translateY(20px)', opacity: '0' },
          '100%': { transform: 'translateY(0)', opacity: '1' },
        },
        scale: {
          '0%': { transform: 'scale(0.95)', opacity: '0' },
          '100%': { transform: 'scale(1)', opacity: '1' },
        },
        float: {
          '0%, 100%': { transform: 'translateY(0)' },
          '50%': { transform: 'translateY(-10px)' },
        },
      },
      backgroundImage: {
        'grid-pattern': "url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23000000' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")",
      },
    },
  },
  plugins: [],
};

================
File: tsconfig.app.json
================
/* To learn more about this file see: https://angular.io/config/tsconfig. */
{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "outDir": "./out-tsc/app",
    "types": [
      "node"
    ]
  },
  "files": [
    "src/main.ts",
    "src/main.server.ts",
    "server.ts"
  ],
  "include": [
    "src/**/*.d.ts"
  ]
}

================
File: tsconfig.json
================
/* To learn more about this file see: https://angular.io/config/tsconfig. */
{
  "compileOnSave": false,
  "compilerOptions": {
    "outDir": "./dist/out-tsc",
    "forceConsistentCasingInFileNames": true,
    "strict": true,
    "noImplicitOverride": true,
    "noPropertyAccessFromIndexSignature": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    "skipLibCheck": true,
    "esModuleInterop": true,
    "sourceMap": true,
    "declaration": false,
    "experimentalDecorators": true,
    "moduleResolution": "node",
    "importHelpers": true,
    "target": "ES2022",
    "module": "ES2022",
    "useDefineForClassFields": false,
    "lib": [
      "ES2022",
      "dom"
    ]
  },
  "angularCompilerOptions": {
    "enableI18nLegacyMessageIdFormat": false,
    "strictInjectionParameters": true,
    "strictInputAccessModifiers": true,
    "strictTemplates": true
  }
}

================
File: tsconfig.spec.json
================
/* To learn more about this file see: https://angular.io/config/tsconfig. */
{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "outDir": "./out-tsc/spec",
    "types": [
      "jasmine"
    ]
  },
  "include": [
    "src/**/*.spec.ts",
    "src/**/*.d.ts"
  ]
}



================================================================
End of Codebase
================================================================
